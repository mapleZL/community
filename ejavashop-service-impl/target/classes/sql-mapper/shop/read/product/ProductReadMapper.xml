<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ejavashop.dao.shop.read.product.ProductReadDao">


	<select id="getSellerRecommendProducts" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product`
		where `seller_id` = #{sellerId}
		and `seller_is_top` = 2
		and `state` = 6
		and `seller_state` = 1
        <if test="size != null and size &gt; 0">limit #{size}</if>
    </select>

    <select id="getProductsByIds" parameterType="java.util.List" resultType="com.ejavashop.entity.product.Product">
		select
			*
		from `product`
		where `id` in
		<foreach collection="list" index="index" item="item" open="("
			separator="," close=")">
			#{item}
		</foreach>
	</select>

	<select id="getSellerNewProducts" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product`
		where `seller_id` = #{sellerId}
		and `state` = 6
		and `seller_state` = 1
		order by id desc
        <if test="size != null and size &gt; 0">limit #{size}</if>
    </select>

	<!-- 查询商铺所有在售商品 -->
    <select id="getProductForSellerList" resultType="com.ejavashop.entity.product.Product">
		select
        	*
        from `product`
        <include refid="getProductForSellerListCond"/>
        <choose>
	        <when test="sort == 0">
	        	order by `actual_sales` desc
	        </when>
	        <when test="sort == 1">
	        	order by `actual_sales` desc
	        </when>
	        <when test="sort == 2">  
	        	order by `comments_number` desc
	        </when>
	        <when test="sort == 3">  
	        	order by `mall_pc_price` asc
	        </when>
	        <when test="sort == 4">  
	        	order by `mall_pc_price` desc
	        </when>
    	</choose>
    	<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    
    <!-- 查询所有在售商品 -->
    <select id="getProducts" resultType="com.ejavashop.entity.product.Product">
		select
        	*
        from `product`
        where 
        `seller_state` = 1
        and `state` = 6
        and `product_cate_state` = 1
        and `up_time`  &lt; now()
    	<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    
    <!-- 查询所有在售商品 -->
    <select id="getProductsUpdateTime" resultType="com.ejavashop.entity.product.Product">
		select
        	*
        from `product`
        where 
        `update_time` &gt; #{dateIndex}
    </select>
    
    <!-- 统计所有在售商品 -->
    <select id="getProductsCount" resultType="Integer">
		select
        	count(1)
        from `product`
        where 
        `seller_state` = 1
        and `state` = 6
        and `product_cate_state` = 1
        and `up_time`  &lt; now()
    </select>

    <select id="getProductForSellerListCount" resultType="Integer">
		select
        	count(1)
        from `product`
        <include refid="getProductForSellerListCond"/>
    </select>

	<sql id="getProductForSellerListCond">
		where `seller_id` = #{sellerId}
	        and `seller_state` = 1
	        and `state` = 6
	        and `product_cate_state` = 1
	        and `up_time` &lt; now()
	    <if test="sellerCateId != null and sellerCateId!=''">
	    	and seller_cate_id = #{sellerCateId}
	    </if>
    </sql>

    <select id="getRecommendProducts" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product`
		where `is_top` = 2
		and `seller_state` = 1
		and `state` = 6
		and `product_cate_state` = 1
        <if test="size != null and size &gt; 0">limit #{size}</if>
    </select>

	<select id="get" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product`
        where `id` = #{id}
    </select>
    
	<select id="getProductByMax" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product`
        order by id desc
        limit 1
    </select>
    
	<select id="getUpProductCountBySellerId" resultType="Integer">
		select
        	count(1)
        from `product`
        where 
        `seller_id` = #{sellerId}
        and `state` = 6
        and `product_cate_state` = 1
        and `up_time`  &lt; now()
    </select>
	
	
	<!-- <sql id="selectColumn">
        `id`,
        `product_cate_id`,
        `name1`,
        `name2`,
        `keyword`,
        `product_brand_id`,
        `is_self`,
        `cost_price`,
        `protected_price`,
        `market_price`,
        `mall_pc_price`,
        `mal_mobile_price`,
        `virtual_sales`,
        `actual_sales`,
        `product_stock`,
        `is_norm`,
        `norm_ids`,
        `norm_name`,
        `state`,
        `is_top`,
        `up_time`,
        `description`,
        `packing`,
        `seller_id`,
        `create_id`,
        `create_time`,
        `update_time`,
        `seller_cate_id`,
        `seller_is_top`,
        `seller_state`,
        `comments_number`,
        `product_cate_state`,
        `is_invented_product`,
        `master_img`,
        transport_id 
    </sql> -->
    
    <select id="getBySellerId" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product`
        where `seller_id` = #{sellerId}
    </select>
    
<sql id="Where_List">
     <if test="doSelf == 1">
     	and `is_self` = 1
     </if>
     <if test="store == 1">
     	and `product_stock` != 0
     </if>
     <if test="store == 2">
     	and `stock_warning`  &lt;= 1
     </if>
     <if test="store == 3">
     	and `stock_warning` &gt;1
     </if>
     <if test="endPrice != null and endPrice !=''">
     	and `mall_pc_price` &lt;= #{endPrice}
     </if>
     <if test="startPrice != null and startPrice !=''">
     	and `mall_pc_price` &gt;=#{startPrice}
     </if>
     <if test="endStock != null and endStock !=''">
     	and `product_stock` &lt; #{endStock}
     </if>
     <if test="startStock != null and startStock !=''">
     	and `product_stock` &gt;#{startStock}
     </if>
</sql>
    <!-- 查询条件 -->
<sql id="Where_Clause">
	where 1=1
	<trim  suffixOverrides="," >
	<if test="id != null and id != ''" >
		    and id =  #{id}
	</if>
	<if test="productCateId != null and productCateId != ''" >
		    and product_cate_id =  #{productCateId}
		</if>
	<if test="keyword != null and keyword != ''" >
		    and keyword =  #{keyword}
		</if>
	<if test="productBrandId != null and productBrandId != ''" >
		    and product_brand_id =  #{productBrandId}
		</if>
	<if test="isSelf != null and isSelf != ''" >
		    and is_self =  #{isSelf}
		</if>
	<if test="isNorm != null and isNorm != ''" >
		    and is_norm =  #{isNorm}
		</if>
	<if test="state != null and state != ''" >
		    and state =  #{state}
		</if>
	<if test="isTop != null and isTop != ''" >
		    and is_top =  #{isTop}
		</if>
	<if test="sellerId != null and sellerId != ''" >
		    and seller_id =  #{sellerId}
		</if>
	<if test="sellerCateId != null and sellerCateId != ''" >
		    and seller_cate_id =  #{sellerCateId}
		</if>
	<if test="sellerIsTop != null and sellerIsTop != ''" >
		    and seller_is_top =  #{sellerIsTop}
		</if>
	<if test="sellerState != null and sellerState != ''" >
		    and seller_state =  #{sellerState}
		</if>
	<if test="productCateState != null and productCateState != ''" >
		    and product_cate_state =  #{productCateState}
		</if>
	<if test="isInventedProduct != null and isInventedProduct != ''" >
		    and is_invented_product =  #{isInventedProduct}
		</if>
	<if test="transportId != null and transportId != ''" >
		    and transport_id =  #{transportId}
		</if>	
	<if test="stockWarning != null and stockWarning != ''" >
		    and stock_warning =  #{stockWarning}
		</if>	
	</trim>
</sql>
    
    
    <select id="getByCateId" resultType="com.ejavashop.entity.product.Product">
        select * from `product`
        where `product_cate_id` = #{cateId}
	        and `seller_state` = 1
	        and `state` = 6
	        and `product_cate_state` = 1
	        and `up_time`  &lt; now()
	        <if test="brandId != null and brandId != 0">
	        	and `product_brand_id` = #{brandId}
	        </if>
		<include refid="Where_List"/>
      	<include refid="commonOrders"/>
    </select>
    <!-- 取得除了裸袜之外的所有品牌袜:通过品牌ID来判定 -->
    <select id="getNoLuowaByBrandId" resultType="com.ejavashop.entity.product.Product">
        select * from `product`
        where 
           <if test="brandId != 0">`product_brand_id` = #{brandId}</if>
           <if test="brandId == 0">`product_brand_id`  != 8</if>
	        and `state` = 6
	        and `product_cate_state` = 1
	        and `up_time`  &lt; now()
			<include refid="Where_List"/>
       		<include refid="commonOrders"/>
    </select>
    <!-- 其他分类   查询p前缀的链接商品 -->
    
    <select id="countProductByOtherCategory" resultType="com.ejavashop.entity.product.Product">
		select count(1) from product p right join product_order po on p.id = po.product_id and po.sort_type = #{intFlag} 
        where `state` = 6 and `product_cate_state` = 1 and `up_time`  &lt; now() <include refid="Where_List"/>
    </select>
    <select id="getProductByOtherCategory" resultType="com.ejavashop.entity.product.Product">
		select p.* from product p right join product_order po on p.id = po.product_id and po.sort_type = #{intFlag} 
        where `state` = 6 and `product_cate_state` = 1 and `up_time`  &lt; now()
		<include refid="Where_List"/>
        <choose>
	        <when test="sort == 0">
	        	order by po.sort desc, id desc
	        </when>
	        <otherwise>
        		<include refid="commonOrders"/>
	        </otherwise>
    	</choose> 
    </select>
    <!-- end -->
    <select id="getByCateIdTop" resultType="com.ejavashop.entity.product.Product">
        select * from `product`
        where 
	        `seller_state` = 1
	        and `state` = 6
	        and `product_cate_state` = 1
	        <!-- and `up_time`  &lt; now() -->
	        and `is_top` in (99, 2)
	        <if test="cateId != null and cateId != 0" >
		    	and `product_cate_id` = #{cateId}
			</if>
        order by 
        	`is_top` asc
        	limit 4
    </select>
    
     <select id="getByCateIdLeft" resultType="com.ejavashop.entity.product.Product">
        select
         * 
        from `product`
        where 
	         `seller_state` = 1
	        and `state` = 6
	        and `product_cate_state` = 1
	        and `up_time`  &lt; now()
	         <if test="cateId != null and cateId != 0" >
		    	and `product_cate_id` = #{cateId}
			</if>
        order by 
        	`seller_is_top` desc
        	 limit 6
    </select>
    
   <select id="getProductsBySellerId" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product`
      	where seller_id = #{sellerid}
        order by id desc
    </select>
    
    <!-- 商品表 列表总数-->
	<select id="queryCount" resultType="java.lang.Integer"  parameterType="map">
		select count(1) from product 
		<include refid="Where_Clause"/>
	</select>
	  	
	<!-- 查询商品表列表 -->
	<select id="queryList" resultType="com.ejavashop.entity.product.Product"  parameterType="map">
		select 
		 * 
		from product 
		<include refid="Where_Clause"/>
		order by  create_time desc 
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	
	
	<select id="getProductListBySellerCateId" resultType="com.ejavashop.entity.product.Product">
        select * 
        from `product`
        where 
        <if test="cateString != null and cateString != ''" >
        	`seller_cate_id` in (${cateString})
        	and 
        </if>
        	`seller_id` = #{sellerId}
	        and `seller_state` = 1
	        and `state` = 6
	        and `product_cate_state` = 1
	        and `up_time`  &lt; now()
        <choose>
	        <when test="sort == 0">
	        	order by `seller_is_top` desc
	        </when>
	        <when test="sort == 1">
	        	order by `mall_pc_price` asc
	        </when>
	        <when test="sort == 2">  
	        	order by `mall_pc_price` desc
	        </when>
	        <when test="sort == 3">  
	        	order by `actual_sales` desc
	        </when>
	        <when test="sort == 4">  
	        	order by `actual_sales` asc
	        </when>
	        <when test="sort == 5">  
	        	order by `up_time` desc
	        </when>
	        <when test="sort == 6">  
	        	order by `up_time` asc
	        </when>
    	</choose>
    	<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    
    <select id="getProductListBySellerCateIdCount" resultType="java.lang.Integer">
		select count(1) from `product` 
		where 
		<if test="cateString != null and cateString != ''" >
        	`seller_cate_id` in (${cateString})
        	and 
        </if>
        	`seller_id` = #{sellerId}
	        and `seller_state` = 1
	        and `state` = 6
	        and `product_cate_state` = 1
	        and `up_time`  &lt; now()
	</select>
	
	<select id="getProductsBySPU" resultType="com.ejavashop.entity.product.Product" >
		select  * from `product` where  `seller_id` = #{seller_id}
		<if test="name1 != null and name1 != ''" >
			 and `name1` like CONCAT('%',#{name1},'%') 
		</if>
		<if test="product_code != null and product_code != ''" >
			and `product_code` like CONCAT('%',#{product_code},'%') 
		</if>
		 limit 1
	</select>
	
    <select id="checkProductBySPUAndSellerId" resultType="java.lang.Integer">
		select count(*) from `product` where `product_code` = #{param1.spu} and seller_id = #{param1.sellerId} and state != 5
    </select>
	
	<select id="getProductByIsTop" resultType="com.ejavashop.entity.product.Product" parameterType="java.lang.Integer">
		select
        	*
        from `product`
        where 
        1=1
        <if test="sellerId != null and sellerId != ''" >
        	and `seller_id` = #{sellerId}
        </if>
        <if test="isTop != null and isTop != ''" >
        	and `seller_is_top` = #{isTop}
        </if>
        <if test="endPrice != null and endPrice !=''">
	        	and `mall_pc_price` &lt;= #{endPrice}
        </if>
        <if test="startPrice != null and startPrice !=''">
        	and `mall_pc_price` &gt;=#{startPrice}
        </if>
        <if test="endStock != null and endStock !=''">
	        	and `product_stock` &lt; #{endStock}
        </if>
        <if test="startStock != null and startStock !=''">
        	and `product_stock` &gt;#{startStock}
        </if>
        and `state` = 6
        and `product_cate_state` = 1
	    <!-- and `up_time`  &lt; now() -->
	    <choose>
	        <when test="sort == 999">
	        	order by `id` desc
	        </when>
	        <otherwise>
        		<include refid="commonOrders"/>
	        </otherwise>
    	</choose> 
    </select>
    <!-- 获得所有九折商品立减商品【仝照美】 -->
	<select id="getProductBySingle" resultType="com.ejavashop.entity.product.Product">
		select
		   *
		from `product`
		where 1=1 and `id` in
		<foreach collection="singleProductIds" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
		<if test="endPrice != null and endPrice !=''">
	        	and `mall_pc_price` &lt;= #{endPrice}
        </if>
        <if test="startPrice != null and startPrice !=''">
        	and `mall_pc_price` &gt;=#{startPrice}
        </if>
        <if test="endStock != null and endStock !=''">
	        	and `product_stock` &lt; #{endStock}
        </if>
        <if test="startStock != null and startStock !=''">
        	and `product_stock` &gt;#{startStock}
        </if>
        <include refid="commonOrders"/>
	</select>
	
	<select id="getProductYangMao" resultType="com.ejavashop.entity.product.Product">
		select * from `product` where `state` = 6 and `id` in
			(select `product_id` from `product_attr` 
				where `name`='材质' 
					and (`value`='羊毛' or `value`='混纺')) 
        	<include refid="Where_List"/>
        	<include refid="commonOrders"/>
	</select>
	
     <sql id="commonOrders">
		 <choose>
	        <when test="sort == 0">
	        	order by id desc, is_top desc
	        </when>
	        <when test="sort == 1">
	        	order by seller_is_top desc,`id` desc, `actual_sales` desc
	        </when>
	        <when test="sort == 2">  
	        	order by seller_is_top desc,`id` desc, `comments_number` desc
	        </when>
	        <when test="sort == 3">  
	        	order by `mall_pc_price` asc<!-- , seller_is_top desc, `id` desc -->
	        </when>
	        <when test="sort == 4">  
	        	order by `mall_pc_price` desc
	        </when>
	        <when test="sort == 7">  
	        	order by `product_stock` asc
	        </when>
	        <when test="sort == 8">  
	        	order by `product_stock` desc
	        </when>
	        <when test="stock == 1">  
	        	order by `product_stock` asc, `id` desc
	        </when>
	        <when test="stock == 2">  
	        	order by `product_stock` desc, `id` desc
	        </when>
	        <otherwise>
	        	order by id desc, is_top desc
	        </otherwise>
    	</choose> 
     </sql>
	<select id="getProductByLeadingSku" resultType="com.ejavashop.entity.product.Product">
		select * from product where id in 
				(select product_id from product_goods where sku = #{sku}) 
						order by seller_id limit 1
	</select>
	
	   <select id="count" resultType="java.lang.Integer">
        select count(1) from `product`
        <include refid="whereConditions"/>
    </select>
    <select id="count1" resultType="java.lang.Integer">
        select count(1) from `product`
        <include refid="whereConditions1"/>
    </select>
    
     <sql id="whereConditions">
        <where>
            <if test="param1.q_id != null and '' != param1.q_id">
                and `id`= #{param1.q_id}
            </if>
            <if test="param1.q_productCateId != null and '' != param1.q_productCateId">
                and `product_cate_id`= #{param1.q_productCateId}
            </if>
            <if test="param1.q_name1 != null and '' != param1.q_name1">
                and `name1` like CONCAT('%',#{param1.q_name1},'%') 
            </if>
            <if test="param1.q_name2 != null and '' != param1.q_name2">
                and `name2`= #{param1.q_name2}
            </if>
            <if test="param1.q_keyword != null and '' != param1.q_keyword">
                and `keyword`= #{param1.q_keyword}
            </if>
            <if test="param1.q_productBrandId != null and '' != param1.q_productBrandId">
                and `product_brand_id`= #{param1.q_productBrandId}
            </if>
            <if test="param1.q_isSelf != null and '' != param1.q_isSelf">
                and `is_self`= #{param1.q_isSelf}
            </if>
            <if test="param1.q_costPrice != null and '' != param1.q_costPrice">
                and `cost_price`= #{param1.q_costPrice}
            </if>
            <if test="param1.q_protectedPrice != null and '' != param1.q_protectedPrice">
                and `protected_price`= #{param1.q_protectedPrice}
            </if>
            <if test="param1.q_marketPrice != null and '' != param1.q_marketPrice">
                and `market_price`= #{param1.q_marketPrice}
            </if>
            <if test="param1.q_mallPcPrice != null and '' != param1.q_mallPcPrice">
                and `mall_pc_price`= #{param1.q_mallPcPrice}
            </if>
            <if test="param1.q_malMobilePrice != null and '' != param1.q_malMobilePrice">
                and `mal_mobile_price`= #{param1.q_malMobilePrice}
            </if>
            <if test="param1.q_virtualSales != null and '' != param1.q_virtualSales">
                and `virtual_sales`= #{param1.q_virtualSales}
            </if>
            <if test="param1.q_actualSales != null and '' != param1.q_actualSales">
                and `actual_sales`= #{param1.q_actualSales}
            </if>
            <if test="param1.q_productStock != null and '' != param1.q_productStock">
                and `product_stock`= #{param1.q_productStock}
            </if>
            <if test="param1.q_isNorm != null and '' != param1.q_isNorm">
                and `is_norm`= #{param1.q_isNorm}
            </if>
            <if test="param1.q_normIds != null and '' != param1.q_normIds">
                and `norm_ids`= #{param1.q_normIds}
            </if>
            <if test="param1.q_normName != null and '' != param1.q_normName">
                and `norm_name`= #{param1.q_normName}
            </if>
            <if test="param1.q_state != null and '' != param1.q_state">
                and `state`= #{param1.q_state}
            </if>
            <if test="param1.q_isTop != null and '' != param1.q_isTop">
                and `is_top`= #{param1.q_isTop}
            </if>
            <if test="param1.q_upTime != null and '' != param1.q_upTime">
                and `up_time`= #{param1.q_upTime}
            </if>
            <if test="param1.q_description != null and '' != param1.q_description">
                and `description`= #{param1.q_description}
            </if>
            <if test="param1.q_packing != null and '' != param1.q_packing">
                and `packing`= #{param1.q_packing}
            </if>
            <if test="param1.q_sellerId != null and '' != param1.q_sellerId">
                and `seller_id`= #{param1.q_sellerId}
            </if>
            <if test="param1.q_createId != null and '' != param1.q_createId">
                and `create_id`= #{param1.q_createId}
            </if>
            <if test="param1.q_createTime != null and '' != param1.q_createTime">
                and `create_time`= #{param1.q_createTime}
            </if>
            <if test="param1.q_updateTime != null and '' != param1.q_updateTime">
                and `update_time`= #{param1.q_updateTime}
            </if>
            <if test="param1.q_sellerCateId != null and '' != param1.q_sellerCateId">
                and `seller_cate_id`= #{param1.q_sellerCateId}
            </if>
            <if test="param1.q_sellerIsTop != null and '' != param1.q_sellerIsTop">
                and `seller_is_top`= #{param1.q_sellerIsTop}
            </if>
            <if test="param1.q_sellerState != null and '' != param1.q_sellerState">
                and `seller_state`= #{param1.q_sellerState}
            </if>
            <if test="param1.q_productCateState != null and '' != param1.q_productCateState">
                and `product_cate_state`= #{param1.q_productCateState}
            </if>
            <if test="param1.q_isInventedProduct != null and '' != param1.q_isInventedProduct">
                and `is_invented_product`= #{param1.q_isInventedProduct}
            </if>
            <if test="param1.q_stockWarning != null and '' != param1.q_stockWarning">
                and `stock_warning`= #{param1.q_stockWarning}
            </if>
            <if test="param1.q_productCode != null and '' != param1.q_productCode">
                and `product_code`like CONCAT('%',#{param1.q_productCode},'%') 
            </if>
            <if test="param1.q_brandId != null and '' != param1.q_brandId">
                and `product_brand_id`= #{param1.q_brandId}
            </if>
        </where>
    </sql>

    <sql id="whereConditions1">
        <where>
            <if test="param1.q_id != null and '' != param1.q_id">
                and `id`= #{param1.q_id}
            </if>
            <if test="param1.q_productCateId != null and '' != param1.q_productCateId">
                and `product_cate_id`= #{param1.q_productCateId}
            </if>
            <if test="param1.q_name1 != null and '' != param1.q_name1">
                and `name1` like CONCAT('%',#{param1.q_name1},'%')
            </if>
            <if test="param1.q_name2 != null and '' != param1.q_name2">
                and `name2`= #{param1.q_name2}
            </if>
            <if test="param1.q_keyword != null and '' != param1.q_keyword">
                and `keyword`= #{param1.q_keyword}
            </if>
            <if test="param1.q_productBrandId != null and '' != param1.q_productBrandId">
                and `product_brand_id`= #{param1.q_productBrandId}
            </if>
            <if test="param1.q_isSelf != null and '' != param1.q_isSelf">
                and `is_self`= #{param1.q_isSelf}
            </if>
            <if test="param1.q_costPrice != null and '' != param1.q_costPrice">
                and `cost_price`= #{param1.q_costPrice}
            </if>
            <if test="param1.q_protectedPrice != null and '' != param1.q_protectedPrice">
                and `protected_price`= #{param1.q_protectedPrice}
            </if>
            <if test="param1.q_marketPrice != null and '' != param1.q_marketPrice">
                and `market_price`= #{param1.q_marketPrice}
            </if>
            <if test="param1.q_mallPcPrice != null and '' != param1.q_mallPcPrice">
                and `mall_pc_price`= #{param1.q_mallPcPrice}
            </if>
            <if test="param1.q_malMobilePrice != null and '' != param1.q_malMobilePrice">
                and `mal_mobile_price`= #{param1.q_malMobilePrice}
            </if>
            <if test="param1.q_virtualSales != null and '' != param1.q_virtualSales">
                and `virtual_sales`= #{param1.q_virtualSales}
            </if>
            <if test="param1.q_actualSales != null and '' != param1.q_actualSales">
                and `actual_sales`= #{param1.q_actualSales}
            </if>
            <if test="param1.q_productStock != null and '' != param1.q_productStock">
                and `product_stock`= #{param1.q_productStock}
            </if>
            <if test="param1.q_isNorm != null and '' != param1.q_isNorm">
                and `is_norm`= #{param1.q_isNorm}
            </if>
            <if test="param1.q_normIds != null and '' != param1.q_normIds">
                and `norm_ids`= #{param1.q_normIds}
            </if>
            <if test="param1.q_normName != null and '' != param1.q_normName">
                and `norm_name`= #{param1.q_normName}
            </if>
            <if test="param1.q_state != null and '' != param1.q_state">
                and `state` in(${param1.q_state})
            </if>
            <if test="param1.q_isTop != null and '' != param1.q_isTop">
                and `is_top`= #{param1.q_isTop}
            </if>
            <if test="param1.q_upTime != null and '' != param1.q_upTime">
                and `up_time`= #{param1.q_upTime}
            </if>
            <if test="param1.q_description != null and '' != param1.q_description">
                and `description`= #{param1.q_description}
            </if>
            <if test="param1.q_packing != null and '' != param1.q_packing">
                and `packing`= #{param1.q_packing}
            </if>
            <if test="param1.q_sellerId != null and '' != param1.q_sellerId">
                and `seller_id`= #{param1.q_sellerId}
            </if>
            <if test="param1.q_createId != null and '' != param1.q_createId">
                and `create_id`= #{param1.q_createId}
            </if>
            <if test="param1.q_createTime != null and '' != param1.q_createTime">
                and `create_time`= #{param1.q_createTime}
            </if>
            <if test="param1.q_updateTime != null and '' != param1.q_updateTime">
                and `update_time`= #{param1.q_updateTime}
            </if>
            <if test="param1.q_sellerCateId != null and '' != param1.q_sellerCateId">
                and `seller_cate_id`= #{param1.q_sellerCateId}
            </if>
            <if test="param1.q_sellerIsTop != null and '' != param1.q_sellerIsTop">
                and `seller_is_top`= #{param1.q_sellerIsTop}
            </if>
            <if test="param1.q_sellerState != null and '' != param1.q_sellerState">
                and `seller_state`= #{param1.q_sellerState}
            </if>
            <if test="param1.q_productCateState != null and '' != param1.q_productCateState">
                and `product_cate_state`= #{param1.q_productCateState}
            </if>
            <if test="param1.q_isInventedProduct != null and '' != param1.q_isInventedProduct">
                and `is_invented_product`= #{param1.q_isInventedProduct}
            </if>
            <if test="param1.q_stockWarning != null and '' != param1.q_stockWarning">
                and `stock_warning`= #{param1.q_stockWarning}
            </if>
            <if test="param1.q_productCode != null and '' != param1.q_productCode">
                and `product_code`like CONCAT('%',#{param1.q_productCode},'%') 
            </if>
            <if test="param1.q_brandId != null and '' != param1.q_brandId">
                and `product_brand_id`= #{param1.q_brandId}
            </if>
            <if test="param1.q_priceStatus != null and '' != param1.q_priceStatus and param1.q_priceStatus == 2">
            	and `price_status`= #{param1.q_priceStatus}
            </if>
            <if test="param1.q_priceStatus != null and '' != param1.q_priceStatus and param1.q_priceStatus == 1">
            	and (`price_status`= 1 or `price_status`= 3)
            </if>
        </where>
    </sql>
	
	  <select id="countByCateId" resultType="Integer">
		select
        	count(1)
        from `product`
        where 
        `seller_state` = 1
        and `state` = 6
        and `product_cate_state` = 1
        and `product_cate_id` = #{productCateId}
    </select>
    
    <select id="countBySellerCateId" resultType="Integer">
		select
        	count(1)
        from `product`
        where 
        `seller_state` = 1
        and `state` = 6
        and `product_cate_state` = 1
        and `seller_cate_id` = #{sellerCateId}
    </select>
    
   <select id="downMTYProduct" resultType="com.ejavashop.entity.product.Product">
        select p.* from product p where  p.product_stock  &lt; 100  and (p.seller_id = 1 or p.seller_id = 13) and p.state = 6
    </select>
    
    <select id="downOthersProduct" resultType="com.ejavashop.entity.product.Product">
        <!-- select p.* from product p ,product_attr a where p.id = a.product_id and p.product_stock  &lt;  REPLACE(a.`value`,'双','') 
         and a.name = '包装规格' and p.seller_id != 1 and p.seller_id != 13 and p.state = 6 -->
        select p.* from product p ,product_attr a where p.id = a.product_id and p.product_stock  &lt;  REPLACE(a.`value`,'双','') 
         and a.name = '包装规格' and p.state = 6
    </select>
    <select id="getProductByProductsId" resultType="com.ejavashop.entity.product.Product" >
		select  * from `product` where `id`= #{id} limit 1
	</select>
	<select id="getProductByProductCode" resultType="com.ejavashop.entity.product.Product">
        select * from `product`
        where (`name1` like CONCAT('%',#{searchKeyword},'%') or keyword like CONCAT('%',#{searchKeyword},'%')  or name2 like CONCAT('%',#{searchKeyword},'%'))
        and `state` = 6 order by is_top desc,`id` desc, `actual_sales` desc limit #{start},#{size}
    </select>
    
    <select id="getProductByProductCodebySort" resultType="com.ejavashop.entity.product.Product">
    	select * from `product`
        where (`name1` like CONCAT('%',#{searchKeyword},'%') or keyword like CONCAT('%',#{searchKeyword},'%')  or name2 like CONCAT('%',#{searchKeyword},'%'))
        and `state` = 6 
        <if test="sort != null and '' != sort and sort == 3">
        	order by mal_mobile_price asc 
        </if>
        <if test="sort != null and '' != sort and sort == 4">
        	order by mal_mobile_price desc
        </if>
        <if test="sort != null and '' != sort and sort == 5">
        	order by product_stock asc
        </if>
        <if test="sort != null and '' != sort and sort == 6">
        	order by product_stock desc
        </if>
        limit #{start},#{size}
    </select>
    
	<select id="getProductByProductPageCountCode" resultType="java.lang.Integer">
        select count(*) from `product`
        where (`name1` like CONCAT('%',#{searchKeyword},'%') or keyword like CONCAT('%',#{searchKeyword},'%') or name2 like CONCAT('%',#{searchKeyword},'%'))
        and `state` = 6 
    </select>
    
      <select id="getProductsByrefIds" resultType="com.ejavashop.entity.product.Product">
    	select
		   *
		from `product`
		where 1=1 and `id` in
		<foreach collection="refIdsarr" item="item" index="index" open="(" separator="," close=")">
			#{item}
		</foreach>
		order by `id` desc
		limit 6
    </select>
    
    <select id="page" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product`
        <include refid="whereConditions"/>
        order by id desc 
        <if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    <select id="page1" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product`
        <include refid="whereConditions1"/>
        order by id desc
        <if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    
    <select id="page2" resultType="com.ejavashop.entity.product.Product">
        select
        	p.*,pp.price1,concat(pp.price1_s,'-',pp.price1_e) as price1se,
        	pp.price2,concat(pp.price2_s,'-',pp.price2_e) as price2se,
        	pp.price3,concat('>=',pp.price3_s) as price3se,
        	pp.percentage_scale1,pp.percentage_scale2,pp.percentage_scale3
        from `product` p , product_price pp
        <include refid="whereConditions1"/>
        and p.price_pid = pp.id
        order by id desc
        <if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    
     <select id="pageProductByh5fllordata" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product` 
        <include refid="whereConditions1"/>
        <if test="ids != null and ids.size &gt; 0">  
        and `id` not in 
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
         ${item}
       	</foreach>
       	</if>
        order by id desc
        <if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
     <select id="pageproductBypcfloordata" resultType="com.ejavashop.entity.product.Product">
        select
        	*
        from `product` 
        <include refid="whereConditions1"/>
        <if test="ids != null and ids.size &gt; 0">  
        and `id` not in 
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
         ${item}
       	</foreach>
       	</if>
        order by id desc
        <if test="size != null and size &gt; 0">limit #{start},#{size}</if>
    </select>
    
    <select id = "listProductPrice1" resultType = "com.ejavashop.vo.product.ListProductPriceVO1">
    	select p.id as id,(select seller_name from seller where id = p.seller_id) as sellerName,p.product_code as productCode,p.mall_pc_price as price from product p where p.price_status=1 and p.state=6
    </select>
    <select id = "listProductPrice2" resultType = "com.ejavashop.vo.product.ListProductPriceVO2">
    	select p.id as id ,(select seller_name from seller where id = p.seller_id) as sellerName,p.product_code as productCode,p.full_container_quantity as number ,p.mall_pc_price as price1,p.scattered_price as price2 from product p where p.price_status=3 and p.state=6
    </select>
    <select id = "listProductPrice3" resultType = "com.ejavashop.vo.product.ListProductPriceVO3">
    	select p.id as id ,(select seller_name from seller where id = p.seller_id) as sellerName,p.product_code as productCode, concat(pp.price1_s,'-',pp.price1_e) as state1,pp.price1 as price1,concat(pp.price2_s,'-',pp.price2_e) as state2,pp.price2 as price2,concat('>=',pp.price3_s) as state3,pp.price3 as price3 from product p,product_price pp where p.price_pid = pp.id and p.price_status=2 and p.state=6
    </select>
    
</mapper>