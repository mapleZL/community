<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ejavashop.dao.shop.read.product.ProductCateReadDao">
	<resultMap id="ProductCateResult" type="com.ejavashop.entity.product.ProductCate">
			<result property="id" column="id" />
			<result property="productTypeId" column="product_type_id" />
			<result property="pid" column="pid" />
			<result property="name" column="name" />
			<result property="path" column="path" />
			<result property="scaling" column="scaling" />
			<result property="createId" column="create_id" />
			<result property="updateId" column="update_id" />
			<result property="createTime" column="create_time" />
			<result property="updateTime" column="update_time" />
			<result property="sort" column="sort" />
			<result property="status" column="status" />
	</resultMap>
	
	
	   
	<!-- 查询条件 -->
	<sql id="Where_Clause">
		where 1=1
		<trim  suffixOverrides="," >
			<if test="id != null and id !=''"  > and `id`= #{id}</if>
			<if test="productTypeId != null and productTypeId !=''"  > and `product_type_id`= #{productTypeId}</if>
			<if test="pid != null and pid !=''"  > and `pid`= #{pid}</if>
			<if test="name != null and name !=''"  > and `name`= #{name}</if>
			<if test="path != null and path !=''"  > and `path`= #{path}</if>
			<if test="scaling != null and scaling !=''"  > and `scaling`= #{scaling}</if>
			<if test="createId != null and createId !=''"  > and `create_id`= #{createId}</if>
			<if test="updateId != null and updateId !=''"  > and `update_id`= #{updateId}</if>
			<if test="createTime != null and createTime !=''"  > and `create_time`= #{createTime}</if>
			<if test="updateTime != null and updateTime !=''"  > and `update_time`= #{updateTime}</if>
			<if test="sort != null and sort !=''"  > and `sort`= #{sort}</if>
			<if test="status != null and status !=''"  > and `status`= #{status}</if>
		</trim>
	</sql>
	
	
	<select id="get" parameterType="Integer" resultMap="ProductCateResult">
		select
		   *
		from `product_cate`
		where `id` = #{id}
	</select>
	
	<select id="getByPid" parameterType="Integer" resultMap="ProductCateResult">
		select
		   *
		from `product_cate`
		where `pid` = #{pid}
	</select>
	
	<!-- 商品分类 列表总数-->
	<select id="queryCount" resultType="java.lang.Integer"  parameterType="map">
		select count(1) from product_cate
		<include refid="Where_Clause"/>
	</select>
	  	
	<!-- 查询商品分类列表 -->
	<select id="queryList" resultMap="ProductCateResult"  parameterType="map">
		select 
		  * 
		from product_cate 
		<include refid="Where_Clause"/>
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	
	<select id="count" resultType="java.lang.Integer">
        select count(1)
        from product_cate cate, seller_manage_cate seller_cate
        where cate.id = seller_cate.product_cate_id
        <if test="q_state != null and q_state!=''">and seller_cate.state = #{q_state}</if>
        <if test="q_name != null and q_name!=''">and cate.name like CONCAT('%',#{q_name},'%')</if>
	</select>
	
	<select id="getBySellerId" resultType="com.ejavashop.entity.product.ProductCate">
        select
		<include refid="selectColumn"/>
        from product_cate
        where status = 1
          and id in (select product_cate_id from seller_manage_cate where seller = #{sellerId} and state=2)
	</select>
	<sql id="selectColumn">
        `id`,
        `product_type_id`,
        `pid`,
        `name`,
        `path`,
        `scaling`,
        `create_id`,
        `update_id`,
        `create_time`,
        `update_time`,
        `sort`,
        `status`
	</sql>
	
	<select id="getByTypeId" resultType="com.ejavashop.entity.product.ProductCate">
        select
		<include refid="selectColumn"/>
        from `product_cate`
        where `product_type_id` = #{typeId} limit 1
	</select>
	<select id="page" resultType="com.ejavashop.vo.product.ProductCateVO">
		select 
			   seller_cate.id,
		       product_type_id,
		       pid,
		       name,
		       path,
		       scaling,
		       cate. create_id,
		       update_id,
		       update_time,
		       sort,
		       seller_cate.seller as seller,
		       seller_cate.create_time as create_time,
               seller_cate.state as status
		  from product_cate cate, seller_manage_cate seller_cate
		 where cate.id = seller_cate.product_cate_id
         <if test="q_state != null and q_state!=''">and seller_cate.state = #{q_state}</if>
		 <if test="q_name != null and q_name!=''">and name like CONCAT('%',#{q_name},'%')</if>
          order by cate.id desc
		 <if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	
</mapper>