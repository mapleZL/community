<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ejavashop.dao.shop.read.order.OrdersReadDao">
	<resultMap id="OrdersResult" type="com.ejavashop.entity.order.Orders">
			<result property="id" column="id" />
			<result property="orderSn" column="order_sn" />
			<result property="relationOrderSn" column="relation_order_sn" />
			<result property="orderType" column="order_type" />
			<result property="sellerId" column="seller_id" />
			<result property="memberId" column="member_id" />
			<result property="memberName" column="member_name" />
			<result property="orderState" column="order_state" />
			<result property="payTime" column="pay_time" />
			<result property="paymentStatus" column="payment_status" />
			<result property="invoiceStatus" column="invoice_status" />
			<result property="invoiceTitle" column="invoice_title" />
			<result property="invoiceType" column="invoice_type" />
			<result property="moneyProduct" column="money_product" />
			<result property="moneyLogistics" column="money_logistics" />
			<result property="moneyOrder" column="money_order" />
			<result property="moneyPaidBalance" column="money_paid_balance" />
			<result property="moneyPaidReality" column="money_paid_reality" />
			<result property="moneyCoupon" column="money_coupon" />
			<result property="moneyActFull" column="money_act_full" />
			<result property="moneyDiscount" column="money_discount" />
			<result property="moneyBack" column="money_back" />
			<result property="moneyIntegral" column="money_integral" />
			<result property="integral" column="integral" />
			<result property="couponUserId" column="coupon_user_id" />
			<result property="actFullId" column="act_full_id" />
			<result property="activityId" column="activity_id" />
			<result property="ip" column="ip" />
			<result property="paymentName" column="payment_name" />
			<result property="paymentCode" column="payment_code" />
			<result property="name" column="name" />
			<result property="provinceId" column="province_id" />
			<result property="cityId" column="city_id" />
			<result property="areaId" column="area_id" />
			<result property="addressAll" column="address_all" />
			<result property="addressInfo" column="address_info" />
			<result property="mobile" column="mobile" />
			<result property="email" column="email" />
			<result property="zipCode" column="zip_code" />
			<result property="remark" column="remark" />
			<result property="deliverTime" column="deliver_time" />
			<result property="finishTime" column="finish_time" />
			<result property="tradeSn" column="trade_sn" />
			<result property="source" column="source" />
			<result property="logisticsId" column="logistics_id" />
			<result property="logisticsName" column="logistics_name" />
			<result property="logisticsNumber" column="logistics_number" />
			<result property="isCodconfim" column="is_codconfim" />
			<result property="codconfirmId" column="codconfirm_id" />
			<result property="codconfirmName" column="codconfirm_name" />
			<result property="codconfirmTime" column="codconfirm_time" />
			<result property="codconfirmRemark" column="codconfirm_remark" />
			<result property="codconfirmState" column="codconfirm_state" />
			<result property="createTime" column="create_time" />
			<result property="updateTime" column="update_time" />
			<result property="syncState" column="sync_state" />
			<result property="outTime" column="out_time" />
			<result property="sendType" column="send_type" />
			<result property="sendArea" column="send_area" />
			<result property="logisticsNameOms" column="logistics_name_oms" />
	</resultMap>
	<resultMap id="goodsReturnMap" type="com.ejavashop.dto.OrdersReturnDto">
			<result property="id" column="id" />
			<result property="sellerId" column="seller_id" />
			<result property="memberId" column="member_id" />
			<result property="orderState" column="order_state" />
			<result property="payTime" column="pay_time" />
			<result property="paymentStatus" column="payment_status" />
			<result property="stateMoney" column="state_money" />
			<result property="finishTime" column="finish_time" />
	</resultMap>
	<resultMap id="parterTuijianVO" type="com.ejavashop.entity.parter.ParterTuijian">
			<result property="parterName" column="parter_name" />
			<result property="areaName" column="area_name" />
			<result property="brandSales" column="brand_sales" />
			<result property="brandPercent" column="brand_percent" />
			<result property="luowaSales" column="luowa_sales" />
			<result property="luowaPercent" column="luowa_percent" />
			<result property="salesSum" column="sales_sum" />
			<result property="percentSum" column="percent_sum" />
			<result property="startTime" column="start_time" />
			<result property="endTime" column="end_time" />
	</resultMap>
	<resultMap id="categorySalesVO" type="com.ejavashop.entity.parter.CategorySalesVO">
			<result property="brandName" column="is_brand" />
			<result property="brandName1" column="is_brand1" />
			<result property="memberNo" column="member_no" />
			<result property="returnMemberNo" column="return_member_no" />
			<result property="skuNo" column="sku_no" />
			<result property="returnSkuNo" column="return_sku_no" />
			<result property="salesNo" column="sales_no" />
			<result property="returnSalesNo" column="return_sales_no" />
	</resultMap>
	
	<resultMap id="productSaleMap" type="com.ejavashop.dto.ProductSaleDto">
			<result property="orderState" column="order_state" />
			<result property="moneyOrder" column="money_order" />
			<result property="productName" column="product_name" />
			<result property="specInfo" column="spec_info" />
			<result property="isNorm" column="is_norm" />
			<result property="payTime" column="pay_time" />
	</resultMap>
	
	<resultMap id="sumParterSaleVOMap" type="com.ejavashop.entity.parter.SumParterSaleVO">
		    <result property="month" column="months" />
		    <result property="bussineeNo" column="bussinee_no" />
		    <result property="saleMoney" column="sale_money" />
		    <result property="newBussineeNo" column="new_bussinee_no" />
		    <result property="newSaleMoney" column="new_sale_money" />
	</resultMap>
	
	<resultMap id="salesPerson" type="com.ejavashop.entity.parter.SalesPersonVO">
			<result property="userName" column="user_name" />
			<result property="mobile" column="mobile" />
			<result property="memberName" column="member_name" />
			<result property="addressInfo" column="address_info" />
			<result property="addressAll" column="addressAll" />
			<result property="sales" column="sales" />
			<result property="number" column="number" />
			<result property="ordersTime" column="orders_time" />
	</resultMap>
	
	<select id="getOrderNumByMIdAndState" resultType="java.lang.Integer">
		select
		   count(1)
		from `orders`
		where `member_id` = #{memberId}
		and `order_state` = #{orderState}
	</select>
	
	<select id="getCountByMemberId" resultType="java.lang.Integer">
		select
		   count(1)
		from `orders`
		where `member_id` = #{memberId}
		and `order_state` >=3
	</select>
	<select id="getActBiddingState5" parameterType="java.lang.Integer" resultType="com.ejavashop.entity.order.Orders">
		select * from `orders`
		where `order_state` = 5
		and `activity_id` = #{actBiddingId}
        and `order_type` = 9
	</select>
		<select id="getAllRelationOrdersBgId" parameterType="java.lang.Integer" resultType="com.ejavashop.entity.order.Orders">
		select * from  `orders` where `trade_no` = (select `trade_no` from `orders` where id = #{id})
	</select>
	
	<select id="get" parameterType="Integer" resultMap="OrdersResult">
		select
		   *
		from `orders`
		where `id` = #{id}
	</select>

	<select id="getSettleOrders" resultMap="OrdersResult">
		select
		   *
		from `orders`
		where `seller_id` = #{sellerId}
		and `order_state` = 5
		and `finish_time` &gt;= #{startTime}
		and `finish_time` &lt;= #{endTime}
	</select>
	
	<select id="getOrderDayDto" resultType="com.ejavashop.dto.OrderDayDto">
        select 
        	left(create_time,10) as orderDay,
        	sum(money_product) as moneyProduct,
        	sum(money_logistics) as moneyLogistics,
	    	sum(money_order) as moneyOrder,
        	sum(money_paid_balance) as moneyPaidBalance,
        	sum(money_paid_reality) as moneyPaidReality,
        	sum(money_back) as moneyBack,
        	sum(money_discount) as moneyDiscount,
        	sum(service_price) as servicePrice,
        	sum(label_price) as labelPrice,
	    	count(1) as count
    	from orders
		where
			`order_state` != 6
			<if test="queryMap.q_startTime != null and queryMap.q_startTime !=''"  >
				and `create_time` &gt;= #{queryMap.q_startTime}
			</if>
			<if test="queryMap.q_endTime != null and queryMap.q_endTime !=''"  >
				and `create_time` &lt;= #{queryMap.q_endTime}
			</if>
			<if test="queryMap.q_sellerId != null and queryMap.q_sellerId !=''"  >
				and `seller_id`= #{queryMap.q_sellerId}
			</if>
		group by orderDay
    	order by orderDay desc
    </select>
    
    <select id="getOrderDay0913Dto" resultType="com.ejavashop.dto.OrderDayDto">
        select 
        	orderDay,
        	sum(moneyProduct) as moneyProduct,
        	sum(moneyDiscount) as moneyDiscount,
        	sum(count) as count 
		from (
			select 
        		left(o.create_time,10) as orderDay,
        		sum(op.money_price*op.number) as moneyProduct,
        		sum(op.money_act_single)+o.money_coupon as moneyDiscount,
	    	  	count(distinct o.id) as count
   			from orders as o ,orders_product as op where o.id=op.orders_id
			and
			o.order_state != 6
			<if test="queryMap.q_startTime != null and queryMap.q_startTime !=''"  >
				and o.create_time &gt;= #{queryMap.q_startTime}
			</if>
			<if test="queryMap.q_endTime != null and queryMap.q_endTime !=''"  >
				and o.create_time &lt;= #{queryMap.q_endTime}
			</if>
			<if test="queryMap.q_sellerId != null and queryMap.q_sellerId !=''"  >
				and o.seller_id= #{queryMap.q_sellerId}
			</if>
			group by o.id
		) as k 
		group by k.orderDay
		order by k.orderDay desc

    </select>
    
    <select id="getOrderFinanceDayDto" resultType="com.ejavashop.dto.OrderFinanceDayDto">
        select 
        	left(o.pay_time,10) as orderDay,
        	sum(if(o.money_paid_balance>0,money_paid_balance,o.money_paid_reality)) as moneyPaid,
        	o.payment_name as paymentName
		from orders as o 
		where (o.order_state = 3 or o.order_state=4 or o.order_state=5) 
		<if test="queryMap.q_startTime != null and queryMap.q_startTime !=''"  >
			and o.pay_time &gt;= #{queryMap.q_startTime}
		</if>
		<if test="queryMap.q_endTime != null and queryMap.q_endTime !=''"  >
			and o.pay_time &lt;= #{queryMap.q_endTime}
		</if>
		<if test="queryMap.q_sellerId != null and queryMap.q_sellerId !=''"  >
			and o.seller_id= #{queryMap.q_sellerId}
		</if>
		group by orderDay desc ,o.payment_name
		order by orderDay desc ,o.payment_name

    </select>
    
	
	<select id="getUnfinishedOrders" resultMap="OrdersResult">
		select
		   *
		from `orders`
		where `order_state` = 4
		and `deliver_time` &lt;= #{deliverTime}
	</select>
	
	<select id="getUnPaiedOrders" resultMap="OrdersResult">
		<!-- select
		   *
		from `orders`
		where `order_state` = 1
		and `payment_status` = 0
		and `create_time` &lt;= #{cancelTime} -->
		select * from `orders` where `order_state` = 1 and order_type != 5
		and `payment_status` = 0 and payment_code != 'OFFSEND' and `create_time` &lt;= #{cancelTime} limit 0, 100
	</select>
	
	<select id="getSumMoneyOrderBySellerId" resultType="com.ejavashop.dto.OrderDayDto">
        select 
	    	sum(money_order) as moneyOrder,
        	sum(money_back) as moneyBack,
	    	count(1) as count
    	from orders
		where `order_state` = 5
			and `seller_id`= #{sellerId}
    </select>
    
    <select id="getCountBySellerId" parameterType="Integer" resultType="Integer">
		select count(1)
		from `orders`
		where `seller_id` = #{sellerId}
	</select>

	<!-- 查询条件 -->
	<sql id="getOrdersCondition">
		<where>
			<if test="queryMap.q_sellerId != null and queryMap.q_sellerId !=''"  >
				and `seller_id`= #{queryMap.q_sellerId}
			</if>
			<if test="queryMap.q_tradeNo!= null and queryMap.q_tradeNo !=''"  >
				and `trade_no` like CONCAT('%',#{queryMap.q_tradeNo},'%')
			</if>
			<if test="queryMap.q_syncState != null and queryMap.q_syncState !=''"  >
				and `sync_state`= #{queryMap.q_syncState}
			</if>
			<if test="queryMap.q_memberId != null and queryMap.q_memberId !=''"  >
				and `member_id`= #{queryMap.q_memberId}
			</if>
			<if test="queryMap.q_orderSn != null and queryMap.q_orderSn !=''"  >
				and `order_sn` like CONCAT('%',#{queryMap.q_orderSn},'%')
			</if>
			<if test="queryMap.q_orderType != null and queryMap.q_orderType != ''" >
				and order_type =  #{queryMap.q_orderType}
			</if>
			<!-- <if test="queryMap.q_orderState != null and queryMap.q_orderState !=''"  >
				and `order_state`= #{queryMap.q_orderState}
			</if> -->
			<if test="queryMap.q_paymentCode != null and queryMap.q_paymentCode !=''"  >
				and `payment_code`= #{queryMap.q_paymentCode}
			</if>
			<if test="queryMap.q_startTime != null and queryMap.q_startTime !=''"  >
				and `create_time` &gt;= #{queryMap.q_startTime}
			</if>
			<if test="queryMap.q_endTime != null and queryMap.q_endTime !=''"  >
				and `create_time` &lt;= #{queryMap.q_endTime}
			</if>
			<if test="queryMap.q_startPayTime != null and queryMap.q_startPayTime !=''"  >
				and `create_time` &gt;= #{queryMap.q_startPayTime}
			</if>
			<if test="queryMap.q_endPayTime != null and queryMap.q_endPayTime !=''"  >
				and `create_time` &lt;= #{queryMap.q_endPayTime}
			</if>
			<if test="queryMap.q_finishStartTime != null and queryMap.q_finishStartTime !=''"  >
				and `finish_time` &gt;= #{queryMap.q_finishStartTime}
			</if>
			<if test="queryMap.q_finishEndTime != null and queryMap.q_finishEndTime !=''"  >
				and `finish_time` &lt;= #{queryMap.q_finishEndTime}
			</if>
			<if test="queryMap.year != null and queryMap.year !=''"  > 
				and Year(finish_time) = #{queryMap.year}
			</if>
			<if test="queryMap.month != null and queryMap.month !=''"  >
			 	and Year(finish_time) = #{queryMap.year} and Month(finish_time) = #{queryMap.month}
			 </if>
			 <if test="queryMap.startTime != null and queryMap.startTime != ''"  >
			 	and `create_time` &gt;= #{queryMap.startTime}
			 </if>
			 <if test="queryMap.endTime != null and queryMap.endTime != ''"  >
			 	and `create_time` &lt;= #{queryMap.endTime}
			 </if>
			 <if test="queryMap.q_logisticsId != null and queryMap.q_logisticsId != ''"  >
			 	and `logistics_id` = #{queryMap.q_logisticsId}
			 </if>
			 <if test="queryMap.q_moneyDiscount != null and queryMap.q_moneyDiscount != ''"  >
			 	and `money_discount` > 0
			 </if>
			 <if test="queryMap.q_servicePrice != null and queryMap.q_servicePrice != ''"  >
			 	and `service_price` > 0
			 </if>
			 <if test="queryMap.q_moneyProduct_s != null and queryMap.q_moneyProduct_s !=''"  >
				and `money_product` &gt;= #{queryMap.q_moneyProduct_s}
			 </if>
			 <if test="queryMap.q_moneyProduct_e != null and queryMap.q_moneyProduct_e !=''"  >
				and `money_product` &lt;= #{queryMap.q_moneyProduct_e}
			 </if>
			 <if test="queryMap.num_state != null and queryMap.num_state !=''"  >
				and exists (select sum(number) num from orders_product where orders_id = o.id having 1=1
				<if test="queryMap.q_number_s != null and queryMap.q_number_s !=''"  >
					and num &gt;= #{queryMap.q_number_s}
				</if>
				<if test="queryMap.q_number_e != null and queryMap.q_number_e !=''"  >
					and num &lt;= #{queryMap.q_number_e}
				</if>
				)
			 </if>
			 <if test="queryMap.q_logisticsIdType != null and queryMap.q_logisticsIdType != ''"  >
			 	and (`logistics_id` = 1 or `logistics_id` = 5)
			 </if>
			 <if test="queryMap.q_source != null and queryMap.q_source != ''"  >
			 	and `source` =#{queryMap.q_source} 
			 </if>
			<if test="queryMap.q_orderState != null and queryMap.q_orderState != ''"  >
			 	and `order_state` =#{queryMap.q_orderState} 
			 </if>
			 <if test="queryMap.q_memberName != null and queryMap.q_memberName != ''"  >
			 	and `member_name` =#{queryMap.q_memberName} 
			 </if>
			 <if test="queryMap.q_name != null and queryMap.q_name != ''"  >
			 	and `name` =#{queryMap.q_name} 
			 </if>
			 <if test="queryMap.q_sellerCode != null and queryMap.q_sellerCode != ''" >
			 	and `seller_id` =#{queryMap.q_sellerCode}
			 </if>
			<if test="queryMap.s_status != null and queryMap.s_status !=''"  >
			 	and `order_state` in 
			 	 <foreach item="item" index="index" collection="queryMap.s_status" open="(" separator="," close=")">  
				  #{item}  
				 </foreach>  
			</if>
			and order_state &lt; 10
		</where>
	</sql>
	
	
	<!-- 查询条件 -->
	<sql id="Where_Clause">
		where 1=1
		<trim  suffixOverrides="," >
		<if test="id != null and id != ''" >
			    and id =  #{id}
			</if>
		<if test="orderSn != null and orderSn != ''" >
			    and order_sn =  #{orderSn}
			</if>
		<if test="relationOrderSn != null and relationOrderSn != ''" >
			    and relation_order_sn =  #{relationOrderSn}
			</if>
		<if test="orderType != null and orderType != ''" >
			    and order_type =  #{orderType}
			</if>
		<if test="sellerId != null and sellerId != ''" >
			    and seller_id =  #{sellerId}
			</if>
		<if test="memberId != null and memberId != ''" >
			    and member_id =  #{memberId}
			</if>
		<if test="memberName != null and memberName != ''" >
			    and member_name =  #{memberName}
			</if>
		<if test="orderState != null and orderState != ''" >
			    and order_state =  #{orderState}
			</if>
		<if test="payTime != null and payTime != ''" >
			    and pay_time =  #{payTime}
			</if>
		<if test="paymentStatus != null and paymentStatus != ''" >
			    and payment_status =  #{paymentStatus}
			</if>
		<if test="invoiceStatus != null and invoiceStatus != ''" >
			    and invoice_status =  #{invoiceStatus}
			</if>
		<if test="invoiceTitle != null and invoiceTitle != ''" >
			    and invoice_title =  #{invoiceTitle}
			</if>
		<if test="invioceState != null and invioceState != ''" >
			    and invioce_state =  #{invioceState}
			</if>
		<if test="invoiceType != null and invoiceType != ''" >
			    and invoice_type =  #{invoiceType}
			</if>
		<if test="lowerId != null and lowerId != ''" >
			    and lower_id =  #{lowerId}
			</if>
		<if test="activityId != null and activityId != ''" >
			    and activity_id =  #{activityId}
			</if>
		<if test="giftcardId != null and giftcardId != ''" >
			    and giftcard_id =  #{giftcardId}
			</if>
		<if test="couponcodeId != null and couponcodeId != ''" >
			    and couponcode_id =  #{couponcodeId}
			</if>
		<if test="ip != null and ip != ''" >
			    and ip =  #{ip}
			</if>
		<if test="paymentName != null and paymentName != ''" >
			    and payment_name =  #{paymentName}
			</if>
		<if test="paymentCode != null and paymentCode != ''" >
			    and payment_code =  #{paymentCode}
			</if>
		<if test="name != null and name != ''" >
			    and name =  #{name}
			</if>
		<if test="provinceId != null and provinceId != ''" >
			    and province_id =  #{provinceId}
			</if>
		<if test="cityId != null and cityId != ''" >
			    and city_id =  #{cityId}
			</if>
		<if test="areaId != null and areaId != ''" >
			    and area_id =  #{areaId}
			</if>
		<if test="mobile != null and mobile != ''" >
			    and mobile =  #{mobile}
			</if>
		<if test="email != null and email != ''" >
			    and email =  #{email}
			</if>
		<if test="zipCode != null and zipCode != ''" >
			    and zip_code =  #{zipCode}
			</if>
		<if test="deliverTime != null and deliverTime != ''" >
			    and deliver_time =  #{deliverTime}
			</if>
		<if test="finishTime != null and finishTime != ''" >
			    and finish_time =  #{finishTime}
			</if>
		<if test="tradeSn != null and tradeSn != ''" >
			    and trade_sn =  #{tradeSn}
			</if>
		<if test="source != null and source != ''" >
			    and source =  #{source}
			</if>
		<if test="logisticsId != null and logisticsId != ''" >
			    and logistics_id =  #{logisticsId}
			</if>
		<if test="logisticsName != null and logisticsName != ''" >
			    and logistics_name =  #{logisticsName}
			</if>
		<if test="logisticsNumber != null and logisticsNumber != ''" >
			    and logistics_number =  #{logisticsNumber}
			</if>
		<if test="isGiftCardOrder != null and isGiftCardOrder != ''" >
			    and is_gift_card_order =  #{isGiftCardOrder}
			</if>
		<if test="isCodconfim != null and isCodconfim != ''" >
			    and is_codconfim =  #{isCodconfim}
			</if>
		<if test="codconfirmId != null and codconfirmId != ''" >
			    and codconfirm_id =  #{codconfirmId}
			</if>
		<if test="codconfirmTime != null and codconfirmTime != ''" >
			    and codconfirm_time =  #{codconfirmTime}
			</if>
		<if test="codconfirmState != null and codconfirmState != ''" >
			    and codconfirm_state =  #{codconfirmState}
			</if>
		<if test="createTime != null and createTime != ''" >
			    and create_time =  #{createTime}
			</if>
		<if test="syncState != null and syncState != ''" >
			    and sync_state =  #{syncState}
			</if>
		</trim>
	</sql>
	
	<!-- 订单 列表总数-->
	<select id="queryCount" resultType="java.lang.Integer"  parameterType="map">
		select count(1) from orders 
		<include refid="Where_Clause"/>
	</select>
	  	
	<!-- 查询订单列表 -->
	<select id="queryList" resultMap="OrdersResult"  parameterType="map">
		select 
			* 
		from orders 
		<include refid="Where_Clause"/>
		order by create_time desc
		
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	
	<select id="getOrderByOrderSn" resultMap="OrdersResult">
		select
		   *
		from `orders`
		where `order_sn` = #{orderSn}
	</select>
	
	<select id="getOrders2" parameterType="java.util.Map" resultType="com.ejavashop.entity.order.Orders">
		select * from `orders` o <include refid="getOrdersCondition" /> GROUP BY if(o.trade_no is null,o.order_sn,o.trade_no)
		<choose>  
            <when test="queryMap.sort == 'moneyOrder' ">
                order by money_order ${queryMap.order}
            </when >  
            <otherwise>  
				order by id desc
            </otherwise>  
        </choose>
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	
	<select id="getOrdersByTradeNo" parameterType="String" resultType="com.ejavashop.entity.order.Orders">
		select * from `orders` where `trade_no` = #{tradeNo}
	</select>
	
	<select id="getParterTuijianSales"  resultMap="parterTuijianVO" >
	 	select tt.parter_name,(select regionName from regions  where id=tt.psAreaId) as area_name,
			 sum(case tt.psBrand when '裸袜' then tt.`实际销售额` else 0 END) as luowa_sales,
			 sum(case tt.psBrand when '裸袜' then tt.`实际销售提点` else 0 END) as luowa_percent,
			 sum(case tt.psBrand when '品牌袜' then tt.`实际销售额` else 0 END) as brand_sales,
			 sum(case tt.psBrand when '品牌袜' then tt.`实际销售提点` else 0 END) as brand_percent,
			 (sum(case tt.psBrand when '裸袜' then tt.`实际销售额` else 0 END)+sum(case tt.psBrand when '品牌袜' then tt.`实际销售额` else 0 END)) as sales_sum,
			 (sum(case tt.psBrand when '裸袜' then tt.`实际销售提点` else 0 END)+sum(case tt.psBrand when '品牌袜' then tt.`实际销售提点` else 0 END)) as percent_sum,
			 tt.start_time as start_time,tt.end_time  as end_time
		from (
				select aa.psAreaId ,aa.psBrand,(ifnull(ttso.ttsoMoney,0)-ifnull(ttrn.ttrnMonry,0)) as '实际销售额', 
							(ifnull(ttso.ttsoMoneyP,0)-ifnull(ttrn.ttrnMonryP,0)) as '实际销售提点' ,
							aa.big_start_time as start_time ,aa.big_end_time as end_time,aa.parter_name
				from (
						select pp.start_time ,pp.end_time,pa.area_id as psAreaId,
						if(pp.type='luowa','裸袜','品牌袜') as psBrand,m.real_name as parter_name,ps.start_time as big_start_time,ps.end_time as big_end_time
						from parter_percent pp 
						left join parter_sign ps on pp.parter_sign_id=ps.id 
						left join parter_area pa on pa.parter_sign_id=ps.id
						left join member m on ps.member_id=m.id 
		
										<if test = "signNo != null and signNo != ''">
										 	where  ps.member_id = #{memberId}  and pp.percent_type='self' and ps.sign_no =#{signNo}
										</if>
										
										<if test = "signNo == null or signNo == ''">
											where m.inviter_id is not null and m.inviter_id != '' and pp.percent_type='recommond' 
										</if>
										
										<if test = "areaId != null and areaId != ''">
										 	and pa.area_id =#{areaId}
										</if>
										<if test = "memberId != null and memberId != '' and signNo ==  null">
										 	and m.inviter_id =#{memberId}
										</if>
										<if test = "memberTuijianId != null and memberTuijianId != ''">
										 	and ps.member_id =#{memberTuijianId}
										</if>
										<if test = "listStartTime != null and listStartTime != ''">
												and pp.start_time &lt;= if(pp.start_time>=#{listStartTime},pp.start_time,#{listStartTime})
										</if>
										<if test = "listEndTime != null and listEndTime != ''">
												and pp.end_time >= if(pp.end_time &lt;=#{listEndTime},pp.end_time,#{listEndTime})
										</if>
				) as aa
				left join (
						select totalso.psBrand,totalso.psAreaId,totalso.percent,totalso.start_time ,totalso.end_time,sum(totalso.sdMonry) as ttsoMoney,totalso.percent*sum(totalso.sdMonry) as ttsoMoneyP
						from (
								select *
								from (
										select pp.start_time ,pp.end_time,ps.sign_no,pa.area_id as psAreaId,
										if(pp.type='luowa','裸袜','品牌袜') as psBrand,pp.percent
										from parter_percent pp 
										left join parter_sign ps on pp.parter_sign_id=ps.id 
										left join parter_area pa on pa.parter_sign_id=ps.id
										left join member m on ps.member_id=m.id 
		
										<if test = "signNo != null and signNo != ''">
										 	where  ps.member_id = #{memberId}  and pp.percent_type='self' and ps.sign_no =#{signNo}
										</if>
										
										<if test = "signNo == null or signNo == ''">
											where m.inviter_id is not null and m.inviter_id != '' and pp.percent_type='recommond' 
										</if>
										
										<if test = "areaId != null and areaId != ''">
										 	and pa.area_id =#{areaId}
										</if>
										<if test = "memberId != null and memberId != '' and signNo ==  null">
										 	and m.inviter_id =#{memberId}
										</if>
										<if test = "memberTuijianId != null and memberTuijianId != ''">
										 	and ps.member_id =#{memberTuijianId}
										</if>
										<if test = "listStartTime != null and listStartTime != ''">
												and pp.start_time &lt;= if(pp.start_time>=#{listStartTime},pp.start_time,#{listStartTime})
										</if>
										<if test = "listEndTime != null and listEndTime != ''">
												and pp.end_time >= if(pp.end_time &lt;=#{listEndTime},pp.end_time,#{listEndTime})
										</if>
								) as aa
								left join (
									select if(p.product_brand_id=8,'裸袜','品牌袜') as sdBrand ,((op.number * op.money_price) - op.money_act_single) as sdMonry ,o.area_id as sdAreaId ,
									o.out_time as sdTime
									from orders_product op
									left join orders o on op.orders_id=o.id
									left join product p on op.product_id=p.id
									where o.order_state in (4,5)  
									<if test = "listStartTime != null and listStartTime != ''">
										 and o.out_time >= #{listStartTime}
									</if>
									<if test = "listEndTime != null and listEndTime != ''">
										 and o.out_time &lt;= #{listEndTime}
									</if>
								) sd on aa.psBrand=sd.sdBrand and aa.psAreaId=sd.sdAreaId 
								where aa.start_time &lt;= sd.sdTime and aa.end_time >= sd.sdTime
						) as totalso 
						group by totalso.psBrand,totalso.psAreaId,totalso.percent,totalso.start_time,totalso.end_time
				)  as ttso on aa.psBrand= ttso.psBrand and aa.psAreaId=ttso.psAreaId and aa.start_time=ttso.start_time and aa.end_time=ttso.end_time
				left join (
						select totalRn.psBrand,totalRn.psAreaId,totalRn.percent,totalRn.start_time ,totalRn.end_time,sum(totalRn.rdMonry) as ttrnMonry,totalRn.percent*sum(totalRn.rdMonry) as ttrnMonryP
						from (
								select *
								from (
										select pp.start_time ,pp.end_time,ps.sign_no,pa.area_id as psAreaId,
										if(pp.type='luowa','裸袜','品牌袜') as psBrand,pp.percent,m.id
										from parter_percent pp 
										left join parter_sign ps on pp.parter_sign_id=ps.id 
										left join parter_area pa on pa.parter_sign_id=ps.id
										left join member m on ps.member_id=m.id 
										
										<if test = "signNo != null and signNo != ''">
										 	where  ps.member_id = #{memberId}  and pp.percent_type='self' and ps.sign_no =#{signNo}
										</if>
										
										<if test = "signNo == null or signNo == ''">
											where m.inviter_id is not null and m.inviter_id != '' and pp.percent_type='recommond' 
										</if>
										
										<if test = "areaId != null and areaId != ''">
										 	and pa.area_id =#{areaId}
										</if>
										<if test = "memberId != null and memberId != '' and signNo ==  null">
										 	and m.inviter_id =#{memberId}
										</if>
										<if test = "memberTuijianId != null and memberTuijianId != ''">
										 	and ps.member_id =#{memberTuijianId}
										</if>
										<if test = "listStartTime != null and listStartTime != ''">
												and pp.start_time &lt;= if(pp.start_time>=#{listStartTime},pp.start_time,#{listStartTime})
										</if>
										<if test = "listEndTime != null and listEndTime != ''">
												and pp.end_time >= if(pp.end_time &lt;=#{listEndTime},pp.end_time,#{listEndTime})
										</if>
								) as aaa
								left join (
									select if(p.product_brand_id=8,'裸袜','品牌袜') as rdBrand ,(opr.number*opr.money_price) as rdMonry ,orr.area_id as rdAreaId ,
									orr.return_time as rdTime
									from orders_product_return opr
									left join orders_return orr on opr.orders_id=orr.id
									left join product p on opr.product_id=p.id 
									<if test = "listStartTime != null and listStartTime != ''">
										where  orr.return_time >= #{listStartTime}
									</if>
									<if test = "listEndTime != null and listEndTime != ''">
										 and orr.return_time &lt;= #{listEndTime}
									</if>
								) rd on aaa.psBrand=rd.rdBrand and aaa.psAreaId=rd.rdAreaId 
								where aaa.start_time &lt;= rd.rdTime and aaa.end_time >= rd.rdTime
								
						) as totalRn 
						group by totalRn.psBrand,totalRn.psAreaId,totalRn.percent,totalRn.start_time,totalRn.end_time
				) as ttrn on aa.psBrand= ttrn.psBrand and aa.psAreaId=ttrn.psAreaId and aa.start_time=ttrn.start_time and aa.end_time=ttrn.end_time
		)as tt
		group by tt.psAreaId
	 		
	</select>
	
	<!-- 获得创建订单至现在2.5个小时还没有付款的订单 -->
	<select id="getUnPaiedOrdersLs" resultMap="OrdersResult">
		select * from `orders` where `order_state` = 1 and order_type != 5
		and `payment_status` = 0 and payment_code != 'OFFSEND' 
		and `create_time` &lt;= #{limitTime} 
		and `create_time` &gt;= #{cancelTime} limit 0, 100
	</select>
	
	<select	id="getCountByProductGoodsId"  resultType="java.lang.Integer">
		select ifnull(sum(number),0) from orders_product where 
			orders_sn in(select order_sn from orders where member_id=#{memberId}
			<if test = "tFlag != null and tFlag != '' and tFlag ==1">
		    	and order_state=1 
		    </if>
		    <if test = "tFlag != null and tFlag != '' and tFlag ==2">
		    	and order_state in(3,4,5)
		    </if>
		    and create_time &gt;= #{beginTime} 
		    and create_time &lt;= #{endTime}) 
			and product_goods_id = #{productGoodsId}
	</select>
	
	<select id="getByOrderSn" parameterType="String" resultMap="OrdersResult">
		select
		   *
		from `orders`
		where `order_sn` = #{orderSn}
	</select>
	
	<select id ="getCategorySales" resultMap="categorySalesVO">
				   select * from 
			
			(select if(p.product_brand_id = 8,'裸袜','品牌袜') as is_brand,sum(op.number) as sku_no,count(distinct o.member_id) as member_no,sum((op.number * op.money_price) - op.money_act_single) as sales_no from orders o 
			left join orders_product op on o.id=op.orders_id 
			left join product p on p.id=op.product_id
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
									and o.out_time >= #{startTime} and o.out_time &lt;= #{endTime}
									and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and o.area_id in ( select pa.area_id from parter_area pa where pa.parter_sign_id= (
									          select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									)
			group by is_brand) as aa LEFT JOIN 
			
			(select if(p.product_brand_id = 8,'裸袜','品牌袜') as is_brand1,sum(opr.number) as return_sku_no,count(distinct orn.member_id) as return_member_no,sum((opr.number * opr.money_price) - opr.money_act_single)as return_sales_no from orders_return orn 
			left join orders_product_return opr on orn.id=opr.orders_id 
			left join product p on p.id=opr.product_id
			left join member m on m.id = orn.member_id
			where  orn.return_time >= #{startTime} and orn.return_time &lt;= #{endTime}
									and orn.return_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and orn.return_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and orn.area_id in ( select pa.area_id from parter_area pa where pa.parter_sign_id= (
									          select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									)
			group by is_brand1) as bb on aa.is_brand = bb.is_brand1
			
			union 
			
			select * from 
			
			(select if(p.product_brand_id = 8,'裸袜','品牌袜') as is_brand,sum(op.number) as sku_no,count(distinct o.member_id) as member_no,sum((op.number * op.money_price) - op.money_act_single) as sales_no from orders o 
			left join orders_product op on o.id=op.orders_id 
			left join product p on p.id=op.product_id
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
									and o.out_time  >= #{startTime} and o.out_time &lt;= #{endTime}
									and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and o.area_id in ( select pa.area_id from parter_area pa where pa.parter_sign_id= (
									          select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									)
			group by is_brand) as cc right JOIN 
			
			(select if(p.product_brand_id = 8,'裸袜','品牌袜') as is_brand1,sum(opr.number) as return_sku_no,count(distinct orn.member_id) as return_member_no,sum((opr.number * opr.money_price) - opr.money_act_single)as return_sales_no from orders_return orn 
			left join orders_product_return opr on orn.id=opr.orders_id 
			left join product p on p.id=opr.product_id
			left join member m on m.id = orn.member_id
			where  orn.return_time >= #{startTime} and orn.return_time &lt;= #{endTime}
									and orn.return_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and orn.return_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and orn.area_id in ( select pa.area_id from parter_area pa where pa.parter_sign_id= (
									          select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									)
			group by is_brand1) as dd on cc.is_brand = dd.is_brand1;
	</select>
	
	<select id="getNewSumParterSalesYears"  resultMap="sumParterSaleVOMap">
				select * from 
			(select 
			<if test = "type != null  and type != '' and type == 2">
				YEAR(o.out_time)
		    </if>
			<if test = "type != null  and type != '' and type == 1">
				date(o.out_time)
		     </if>
			 as years,COUNT(DISTINCT o.member_id) as bussinee_no,SUM(o.money_product-o.money_discount) as sale_money from orders o 
			 left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
			                            and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									    and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
										and o.area_id in (select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo}))
					group by 
			<if test = "type != null  and type != '' and type == 2">
				YEAR(o.out_time)
		    </if>
			<if test = "type != null  and type != '' and type == 1">
				date(o.out_time)
		     </if>) as aa left join 
			
			(select 
			<if test = "type != null  and type != '' and type == 2">
				YEAR(o.out_time)
		    </if>
			<if test = "type != null  and type != '' and type == 1">
				date(o.out_time)
		     </if> as years ,SUM(o.money_product-o.money_discount) as new_sale_money,COUNT(DISTINCT o.member_id) as new_bussinee_no from  orders o 
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
		    and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			and o.member_id in (
					select m.id as mid from member m where 
					<if test = "type != null  and type != '' and type == 2">
						YEAR(m.register_time)=YEAR(o.out_time)
				    </if>
					<if test = "type != null  and type != '' and type == 1">
						date(m.register_time)=date(o.out_time)
				     </if>
					
					) and o.area_id in 
			(select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})) 
			GROUP BY 
			<if test = "type != null  and type != '' and type == 2">
				YEAR(o.out_time)
		    </if>
			<if test = "type != null  and type != '' and type == 1">
				date(o.out_time)
		     </if>) as bb ON aa.years = bb.years UNION select * from 
			
			(select 
			<if test = "type != null  and type != '' and type == 2">
				YEAR(o.out_time)
		    </if>
			<if test = "type != null  and type != '' and type == 1">
				date(o.out_time)
		     </if> as years,COUNT(DISTINCT o.member_id) as bussinee_no,SUM(o.money_product-o.money_discount) as sale_money from orders o 
		     left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
					and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
					and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
					and o.area_id in (select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo}))
					group by 
			<if test = "type != null  and type != '' and type == 2">
				YEAR(o.out_time)
		    </if>
			<if test = "type != null  and type != '' and type == 1">
				date(o.out_time)
		     </if>) as aa right join 
			
			(select 
			<if test = "type != null  and type != '' and type == 2">
				YEAR(o.out_time)
		    </if>
			<if test = "type != null  and type != '' and type == 1">
				date(o.out_time)
		     </if>
			 as years ,SUM(o.money_product-o.money_discount) as new_sale_money,COUNT(DISTINCT o.member_id) as new_bussinee_no from  orders o 
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
			and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			 and o.member_id in (
					select m.id as mid from member m where 
					<if test = "type != null  and type != '' and type == 2">
						YEAR(m.register_time)=YEAR(o.out_time)
				    </if>
					<if test = "type != null  and type != '' and type == 1">
						date(m.register_time)=date(o.out_time)
				     </if>
					) and o.area_id in 
			(select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})) 
			GROUP BY 
			<if test = "type != null  and type != '' and type == 2">
				YEAR(o.out_time)
		    </if>
			<if test = "type != null  and type != '' and type == 1">
				date(o.out_time)
		     </if>
			) as bb ON aa.years = bb.years
			<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	<select id="getOrderList" parameterType="String" resultType="com.ejavashop.entity.order.Orders">
		select * from `orders` where `trade_no` =#{relationOrderSn}
	</select>
	
	<select id="getOrdersCount" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from `orders` o
		<include refid="getOrdersCondition" />
	</select>
	
	<select id="getOrdersCount2" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(k.t) from ( select count(1) as t from `orders` o
		<include refid="getOrdersCondition" />
		 GROUP BY  if(o.trade_no is null,o.order_sn,o.trade_no)
		) as k;
	</select>
	
	<select id="getOrdersCount1" parameterType="java.util.Map" resultType="java.lang.Integer">
		select count(1) from `orders` o
		<include refid="getOrdersCondition1" />
	</select>
	
	<select id="getOrders" parameterType="java.util.Map" resultType="com.ejavashop.entity.order.Orders">
		select * from `orders` o
		<include refid="getOrdersCondition" />
		<choose>  
            <when test="queryMap.sort == 'moneyOrder' ">
                order by money_order ${queryMap.order}
            </when >  
            <otherwise>  
				order by id desc
            </otherwise>  
        </choose>
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	<select id="getOrdersAndOrdersProductVO" parameterType="java.util.Map" resultType="com.ejavashop.entity.order.OrdersAndOrdersProductVO">
		select o.member_id,o.member_name,o.order_sn,o.create_time,o.pay_time,o.order_type,o.order_state,
		op.number,op.money_price,o.money_order,o.money_product,o.money_coupon,op.money_act_single,
		o.money_logistics,o.service_price,op.label_fee_total,o.payment_name,o.logistics_name,o.address_info,
		o.name,o.mobile,o.seller_id,op.product_sku,op.product_name,op.money_amount,op.package_fee_total
		from orders o,orders_product op   
		<include refid="getOrdersConditionForexcel" />
		<choose>  
            <when test="queryMap.sort == 'moneyOrder' ">
                order by money_order ${queryMap.order}
            </when >  
            <otherwise>  
				order by o.id desc
            </otherwise>  
        </choose>
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	<sql id="getOrdersConditionForexcel">
		<where>
				and o.`order_sn` = op.`orders_sn`
			<if test="queryMap.q_sellerId != null and queryMap.q_sellerId !=''"  >
				and `seller_id`= #{queryMap.q_sellerId}
			</if>
			<if test="queryMap.q_syncState != null and queryMap.q_syncState !=''"  >
				and `sync_state`= #{queryMap.q_syncState}
			</if>
			<if test="queryMap.q_memberId != null and queryMap.q_memberId !=''"  >
				and `member_id`= #{queryMap.q_memberId}
			</if>
			<if test="queryMap.q_orderSn != null and queryMap.q_orderSn !=''"  >
				and `order_sn` like CONCAT('%',#{queryMap.q_orderSn},'%')
			</if>
			<if test="queryMap.q_orderType != null and queryMap.q_orderType != ''" >
				and order_type =  #{queryMap.q_orderType}
			</if>
			<!-- <if test="queryMap.q_orderState != null and queryMap.q_orderState !=''"  >
				and `order_state`= #{queryMap.q_orderState}
			</if> -->
			<if test="queryMap.q_paymentCode != null and queryMap.q_paymentCode !=''"  >
				and `payment_code`= #{queryMap.q_paymentCode}
			</if>
			<if test="queryMap.q_startTime != null and queryMap.q_startTime !=''"  >
				and o.`create_time` &gt;= #{queryMap.q_startTime}
			</if>
			<if test="queryMap.q_endTime != null and queryMap.q_endTime !=''"  >
				and o.`create_time` &lt;= #{queryMap.q_endTime}
			</if>
			<if test="queryMap.q_startPayTime != null and queryMap.q_startPayTime !=''"  >
				and o.`create_time` &gt;= #{queryMap.q_startPayTime}
			</if>
			<if test="queryMap.q_endPayTime != null and queryMap.q_endPayTime !=''"  >
				and o.`create_time` &lt;= #{queryMap.q_endPayTime}
			</if>
			<if test="queryMap.q_finishStartTime != null and queryMap.q_finishStartTime !=''"  >
				and o.`finish_time` &gt;= #{queryMap.q_finishStartTime}
			</if>
			<if test="queryMap.q_finishEndTime != null and queryMap.q_finishEndTime !=''"  >
				and o.`finish_time` &lt;= #{queryMap.q_finishEndTime}
			</if>
			<if test="queryMap.year != null and queryMap.year !=''"  > 
				and Year(finish_time) = #{queryMap.year}
			</if>
			<if test="queryMap.month != null and queryMap.month !=''"  >
			 	and Year(finish_time) = #{queryMap.year} and Month(finish_time) = #{queryMap.month}
			 </if>
			 <if test="queryMap.startTime != null and queryMap.startTime != ''"  >
			 	and o.`create_time` &gt;= #{queryMap.startTime}
			 </if>
			 <if test="queryMap.endTime != null and queryMap.endTime != ''"  >
			 	and o.`create_time` &lt;= #{queryMap.endTime}
			 </if>
			 <if test="queryMap.q_logisticsId != null and queryMap.q_logisticsId != ''"  >
			 	and `logistics_id` = #{queryMap.q_logisticsId}
			 </if>
			 <if test="queryMap.q_moneyDiscount != null and queryMap.q_moneyDiscount != ''"  >
			 	and `money_discount` >= 0
			 </if>
			 <if test="queryMap.q_servicePrice != null and queryMap.q_servicePrice != ''"  >
			 	and `service_price` > 0
			 </if>
			 <if test="queryMap.q_moneyProduct_s != null and queryMap.q_moneyProduct_s !=''"  >
				and `money_product` &gt;= #{queryMap.q_moneyProduct_s}
			 </if>
			 <if test="queryMap.q_moneyProduct_e != null and queryMap.q_moneyProduct_e !=''"  >
				and `money_product` &lt;= #{queryMap.q_moneyProduct_e}
			 </if>
			 <if test="queryMap.q_outTime_s != null and  queryMap.q_outTime_s !=''">
			 	and `out_time` &gt;= #{queryMap.q_outTime_s}
			 </if>
			 <if test="queryMap.q_outTime_e != null and  queryMap.q_outTime_e !=''">
			 	and `out_time` &lt;= #{queryMap.q_outTime_e}
			 </if>
			 <if test="queryMap.num_state != null and queryMap.num_state !=''"  >
				and exists (select sum(number) num from orders_product where orders_id = o.id having 1=1
				<if test="queryMap.q_number_s != null and queryMap.q_number_s !=''"  >
					and num &gt;= #{queryMap.q_number_s}
				</if>
				<if test="queryMap.q_number_e != null and queryMap.q_number_e !=''"  >
					and num &lt;= #{queryMap.q_number_e}
				</if>
				)
			 </if>
			 <if test="queryMap.q_logisticsIdType != null and queryMap.q_logisticsIdType != ''"  >
			 	and (`logistics_id` = 1 or `logistics_id` = 5)
			 </if>
			 <if test="queryMap.q_source != null and queryMap.q_source != ''"  >
			 	and `source` =#{queryMap.q_source} 
			 </if>
			 <!-- <if test="queryMap.q_orderState != null and queryMap.q_orderState != ''"  >
			 	and `order_state` =#{queryMap.q_orderState} 
			 </if> -->
			 <if test="queryMap.q_memberName != null and queryMap.q_memberName != ''"  >
			 	and `member_name` =#{queryMap.q_memberName} 
			 </if>
			 <if test="queryMap.q_name != null and queryMap.q_name != ''"  >
			 	and `name` =#{queryMap.q_name} 
			 </if>
			<if test="queryMap.s_status != null and queryMap.s_status !=''"  >
			 	and `order_state` in 
			 	 <foreach item="item" index="index" collection="queryMap.s_status" open="(" separator="," close=")">  
				  #{item}  
				 </foreach>  
			</if>
		</where>
	</sql>
	
	<select id="getordersInStore" parameterType="java.util.Map" resultType="com.ejavashop.entity.order.Orders">
		select * from `orders`
		<include refid="getOrdersCondition1" />
		order by id desc
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	
	<sql id="getOrdersCondition1">
		<where>
			<if test="queryMap.q_sellerId != null and queryMap.q_sellerId !=''"  >
				and `seller_id`= #{queryMap.q_sellerId}
			</if>
			<if test="queryMap.q_memberId != null and queryMap.q_memberId !=''"  >
				and `member_id`= #{queryMap.q_memberId}
			</if>
			<if test="queryMap.q_orderSn != null and queryMap.q_orderSn !=''"  >
				and `order_sn` like CONCAT('%',#{queryMap.q_orderSn},'%')
			</if>
			<if test="queryMap.q_orderState != null and queryMap.q_orderState !=''"  >
				and `order_state`= #{queryMap.q_orderState}
			</if>
			<if test="queryMap.q_paymentCode != null and queryMap.q_paymentCode !=''"  >
				and `payment_code`= #{queryMap.q_paymentCode}
			</if>
			<if test="queryMap.q_finishStartTime != null and queryMap.q_finishStartTime !=''"  >
				and `finish_time` &gt;= #{queryMap.q_finishStartTime}
			</if>
			<if test="queryMap.q_finishEndTime != null and queryMap.q_finishEndTime !=''"  >
				and `finish_time` &lt;= #{queryMap.q_finishEndTime}
			</if>
			<if test="queryMap.year != null and queryMap.year !=''"  > 
				and Year(finish_time) = #{queryMap.year}
			</if>
			<if test="queryMap.month != null and queryMap.month !=''"  >
			 	and Year(finish_time) = #{queryMap.year} and Month(finish_time) = #{queryMap.month}
			 </if>
			<if test="queryMap.startTime != null and queryMap.startTime != ''"  >
			 	and `create_time` &gt;=#{queryMap.startTime}
			 </if>
			 <if test="queryMap.endTime != null and queryMap.endTime != ''"  >
			 	and `create_time` &lt;=#{queryMap.endTime}
			 </if>
			 <if test="queryMap.q_syncState != null and queryMap.q_syncState!= ''"  >
			 	and `sync_state` = #{queryMap.q_syncState }
			 </if>
			 and `order_type` =4
		</where>
	</sql>
	<select id="getOrderSn" parameterType="String" resultType="com.ejavashop.entity.order.OrdersTradeSerial">
		select * from `orders_trade_serial` where `trade_sn` = #{tradeSn}
	</select>
	
	<select id="getOrderStateComment" resultType="java.lang.String">
		SELECT DISTINCT
			c.column_comment	
		FROM
			INFORMATION_SCHEMA. COLUMNS c
		WHERE
			c.table_name = 'orders'
		AND c.TABLE_SCHEMA = 'ejavashop'
		AND c.COLUMN_NAME = 'order_state'
	</select>
	
	<select id="getProductByOrderId" resultType="com.ejavashop.entity.product.Product">
		SELECT
			*
		FROM
			product p
		WHERE
			p.id IN(
				SELECT
					op.product_id
				FROM
					orders_product op
				WHERE
					op.orders_id = #{orderid}
			)
	</select>
	
	<select id="getProductSale" resultMap="productSaleMap">
		SELECT
			o.order_state AS order_state,
			o.money_order AS money_order,
			p.name1 AS product_name,
			op.spec_info AS spec_info,
			p.is_norm AS is_norm,
			o.pay_time as pay_time
		FROM
			orders o
		LEFT OUTER JOIN orders_product op ON o.id = op.orders_id
		LEFT OUTER JOIN product_goods g ON op.product_goods_id = g.id
		LEFT OUTER JOIN product p ON g.product_id = p.id
		WHERE 1=1
		<if test="productId != null"  > 
			AND p.id = #{productId}
		</if>
		<if test="year != null"  > 
			AND Year(o.pay_time) = #{year}
		</if>
		<if test="month != null"  >
		 	AND Year(o.pay_time) = #{year} AND Month(o.pay_time) = #{month}
		 </if>
		<if test="sellerId != null"  > 
			AND o.seller_id = #{sellerId}
		</if>
		<if test="s_status != null"  > 
			AND o.order_state in 
			 <foreach item="item" index="index" collection="s_status" open="(" separator="," close=")">  
			  #{item}  
			 </foreach>  
		</if>
	</select>
	<select id= "getSalesCount2"  resultType="Integer">
		select count(1) from 
		(select * from 
			(select date(o.out_time) as years1,COUNT(DISTINCT o.member_id) as bussinee_no,SUM(o.money_product-o.money_discount) as sale_money from orders o 
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
			                            and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									    and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
										and o.area_id in (select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo}))
					group by date(o.out_time)
		     ) as aa left join 
			(select date(o.out_time) as years2 ,SUM(o.money_product-o.money_discount) as new_sale_money,COUNT(DISTINCT o.member_id) as new_bussinee_no from  orders o 
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
			and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			and o.member_id in (
					select m.id as mid from member m where 
						date(m.register_time)=date(o.out_time)
					) and o.area_id in 
			(select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})) 
			GROUP BY date(o.out_time)
		     ) as bb ON aa.years1 = bb.years2 
		     UNION select * from 
			(select 
				date(o.out_time)
		     as years3,COUNT(DISTINCT o.member_id) as bussinee_no,SUM(o.money_product-o.money_discount) as sale_money from orders o 
		     left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
		            and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
					and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
					and o.area_id in (select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo}))
					group by date(o.out_time)
		     ) as aa right join 
			(select 
				date(o.out_time)
			 as years4 ,SUM(o.money_product-o.money_discount) as new_sale_money,COUNT(DISTINCT o.member_id) as new_bussinee_no from  orders o 
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
			and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			 and o.member_id in (
					select m.id as mid from member m where 
						date(m.register_time)=date(o.out_time)
					) and o.area_id in 
			(select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})) 
			GROUP BY date(o.out_time)
			) as bb ON aa.years3 = bb.years4) as cc
	</select>
	<select id = "getSalesDetails" resultMap = "salesDetailsVO">
			select *,aa.oid as ids ,(aa.money_order - ifnull(bb.return_money_order,0)) as end_money from (
			select o.id as oid,o.order_sn,o.name  ,o.money_product
			,o.service_price,o.label_price,o.money_logistics,(o.money_product - o.money_discount) as money_order,o.out_time as orders_time,o.address_all as address_all
			 from orders  o left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
									and o.out_time  >= #{startTime} and o.out_time &lt;= #{endTime}
									and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and o.area_id in ( select pa.area_id from parter_area pa where pa.parter_sign_id= (
									          select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									)
									<if test="areaId != null and areaId != ''">
									and o.area_id = #{areaId}
									</if>
			) as aa 
			LEFT JOIN 
			(select r.order_sn as orders_sn,
			sum(opr.number*opr.money_price) as return_money_order
			from orders_return r  LEFT JOIN orders_product_return opr on opr.orders_id = r.id GROUP BY opr.orders_id) as bb 
			on aa.order_sn = bb.orders_sn
			<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	
	<resultMap id="salesDetailsVO" type="com.ejavashop.entity.parter.SalesDetailsVO">
			<result property="ordersId" column="oid" />
			<result property="orderSn" column="order_sn" />
			<result property="name" column="name" />
			<result property="moneyProduct" column="money_product" />
			<result property="servicePrice" column="service_price" />
			<result property="labelPrice" column="label_price" />
			<result property="moneyLogistics" column="money_logistics" />
			<result property="moneyOrder" column="money_order" />
			<result property="returnMoneyOrder" column="return_money_order" />
			<result property="endMoney" column="end_money" />
			<result property="number" column="number" />
			<result property="returnNumber" column="return_number" />
			<result property="ordersTime" column="orders_time" />
			<result property="addressAll" column="address_all" />
	</resultMap>
	
	<select id="getSalesDetailsCount"  resultType="Integer">
		select count(cc.ids) from (
		select *,aa.oid as ids ,(aa.money_order - ifnull(bb.return_money_order,0)) as end_money from (
		select o.id as oid,o.order_sn,o.name  ,o.money_product
		,o.service_price,o.label_price,o.money_logistics,(o.money_product - o.money_discount) as money_order,o.out_time as orders_time,o.address_all
		 from orders  o left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
									and o.out_time  >= #{startTime} and o.out_time &lt;= #{endTime}
									and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									and o.area_id in ( select pa.area_id from parter_area pa where pa.parter_sign_id= (
									          select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
									)
									<if test="areaId != null and areaId != ''">
									and o.area_id = #{areaId}
									</if>
		) as aa 
		LEFT JOIN 
		(select r.order_sn as orders_sn,
		sum(opr.number*opr.money_price) as return_money_order
		from orders_return r  LEFT JOIN orders_product_return opr on opr.orders_id = r.id GROUP BY opr.orders_id) as bb 
		on aa.order_sn = bb.orders_sn) as cc;
	</select>
	<select id = "getSalesDetailsByOrdersId"  parameterType="Integer" resultMap="salesDetailsVO">
			select * from (
				select p.product_sku as order_sn,p.money_price as money_logistics,IFNULL(p.package_fee,0) as service_price,IFNULL(p.label_fee,0) as label_price,p.number as number,number*(p.money_price+IFNULL(p.package_fee,0)+IFNULL(p.label_fee,0)) as money_order 
				from orders_product p where p.orders_id = #{ordersId}) as aa left join 
				
				(select opr.product_sku as product_sku ,IFNULL(opr.number,0) as return_number,IFNULL(opr.number,0)*(opr.money_price+IFNULL(opr.package_fee,0)+IFNULL(opr.label_fee,0)) as end_money 
				from orders_product_return opr where opr.orders_id = #{ordersId}) as bb
				on aa.order_sn = bb.product_sku
	</select>
	
	<select id= "getSalesPersonCount"  resultType="Integer">
	              select count(*) from (
	                <include refid="getSalesPersonRef" />
	                )  as tt
	</select>
	
	<select id= "getSalesPerson"  resultMap="salesPerson">
	                <include refid="getSalesPersonRef" />
					<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	<sql id="getSalesPersonRef">
		select sum(o.money_product-o.money_discount) as sales,o.member_name as member_name,o.mobile as mobile,o.name as user_name,o.address_all as address_all,o.address_info as address_info,pp.opnumber as number,o.create_time as orders_time
						from orders o  LEFT JOIN  
						(
						select op.orders_id opordersid,sum(op.number) as opnumber from orders_product op group by op.orders_id
						) as pp
						on  pp.opordersid = o.id left join member m on m.id = o.member_id
						where o.payment_status = 1 and o.order_state in (4,5) 
						and o.out_time &gt;= #{startTime} and o.out_time &lt;= #{endTime}
						and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
						and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
						and o.area_id in ( select p.area_id from parter_area p where p.parter_sign_id= (
						          select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
						)
						<if test = "areaId != null and areaId != ''">
						          and o.area_id in (${areaId})
						</if>
						GROUP BY o.member_id , o.address_all,o.mobile,o.name ORDER BY sum(o.money_product-o.money_discount)desc
	</sql>
	
	<select id="getSumParterSales" parameterType="Integer" resultMap="sumParterSaleVOMap">
			select * from 
			(select month(o.out_time) as months,COUNT(DISTINCT o.member_id) as bussinee_no,SUM(o.money_product-o.money_discount) as sale_money from orders o left join member m 
			 on m.id = o.member_id  where o.payment_status = 1 and o.order_state in (4,5)
					<if test = "year != null  and year != ''">
					and year(o.out_time) = #{year}
					</if>
					and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
					and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
					and o.area_id in (select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo}))
					group by month(o.out_time)) as aa left join 
			
			(select month(o.out_time) as months ,SUM(o.money_product-o.money_discount) as new_sale_money,COUNT(DISTINCT o.member_id) as new_bussinee_no from  orders o 
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
			and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			<if test = "year != null  and year != ''">
					and year(o.out_time) = #{year}
			</if>
			and o.member_id in (
					select m.id as mid from member m where month(m.register_time)=month(o.out_time)
					<if test = "year != null  and year != ''">
					and year(m.register_time) = #{year}
					</if>
					) and o.area_id in 
			(select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})) 
			GROUP BY MONTH(o.out_time)) as bb ON aa.months = bb.months UNION select * from 
			
			(select month(o.out_time) as months,COUNT(DISTINCT o.member_id) as bussinee_no,SUM(o.money_product-o.money_discount) as sale_money from orders o 
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
					<if test = "year != null  and year != ''">
					and year(o.out_time) = #{year}
					</if>
					and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
					and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
					and o.area_id in (select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo}))
					group by month(o.out_time)) as aa right join 
			
			(select month(o.out_time) as months ,SUM(o.money_product-o.money_discount) as new_sale_money,COUNT(DISTINCT o.member_id) as new_bussinee_no from  orders o 
			left join member m on m.id = o.member_id
			where o.payment_status = 1 and o.order_state in (4,5) 
			and o.out_time >=(select ps.start_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			and o.out_time &lt;= (select ps.end_time from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})
			<if test = "year != null  and year != ''">
					and year(o.out_time) = #{year}
			</if>
			 and o.member_id in (
					select m.id as mid from member m where month(m.register_time)=month(o.out_time)
					<if test = "year != null  and year != ''">
					and year(m.register_time) = #{year}
					</if>
					) and o.area_id in 
			(select p.area_id from parter_area p 
					where p.parter_sign_id= (select ps.id from parter_sign ps where ps.member_id = #{memberId} and ps.sign_no = #{signNo})) 
			GROUP BY MONTH(o.out_time)) as bb ON aa.months = bb.months
	</select>
	    <select id="getWaitSendGoodsOrders" resultType="com.ejavashop.entity.order.Orders">
       select o.*
       from orders o LEFT JOIN orders_product p on p.orders_id = o.id where o.order_type !=4 
       and o.order_state = 3  and p.product_id != 10  and (o.sync_state = '未推送' or o.sync_state is null) group by o.order_sn order by o.order_sn
    </select>
	
	<select id="goodsReturnRate" parameterType="Integer" resultMap="goodsReturnMap">
		SELECT o.seller_id, 
			o.member_id, 
			o.order_state, 
			o.pay_time, 
			o.payment_status, 
			o.id, 
			m.state_money, 
			o.finish_time
		FROM orders o LEFT OUTER JOIN member_product_back m ON o.id = m.order_id
		WHERE o.order_state = 5
		AND o.payment_status = 1
		<if test="q_sellerId != null"  > 
			AND o.seller_id = #{q_sellerId}
		</if>
		<if test="year != null"  > 
			AND Year(o.finish_time) = #{year}
		</if>
		<if test="month != null"  >
		 	AND Year(o.finish_time) = #{year} and Month(o.finish_time) = #{month}
		 </if>
	</select>
	  <select id="listGoodsInfo"  parameterType="Integer"  resultType="com.ejavashop.vo.order.SendingGoodsVO">
           select pg.product_id,ifnull(p.full_container_quantity,0) as fullContainerQuantity,
            op.product_name,pg.norm_name,op.number,op.product_sku,
            pg.images,o.delivered_sum,op.delivered_num ,op.id as orderGoodsId
            from orders o ,
            orders_product op,product_goods pg , product p
            where op.orders_id = o.id and  op.product_goods_id = pg.id and op.product_id = p.id
			and o.id=#{id};
    </select>
    <select id="listUserInfo"  parameterType="Integer"  resultType="com.ejavashop.vo.order.BookingSendGoodsVO">
         select 
         m.member_name ,m.province_id,m.city_id,
          m.area_id,m.add_all as addressAll,m.address_info,m.mobile,
         m.phone,m.email,
         m.zip_code,o.order_sn
         from 
         orders o ,member_address m
         where  o.member_id = m.member_id
         and o.id = #{id} and m.state = 1
    </select>
    <select id="listUserInfoLimit1"  parameterType="Integer"  resultType="com.ejavashop.vo.order.BookingSendGoodsVO">
         select 
         m.member_name ,m.province_id,m.city_id,
          m.area_id,m.add_all as addressAll,m.address_info,m.mobile,
         m.phone,m.email,
         m.zip_code,o.order_sn
         from 
         orders o ,member_address m
         where  o.member_id = m.member_id
         and o.id = #{id} order by m.create_time desc,m.update_time desc limit 0,1
    </select>
    
    <select id="getLastLoginMemberList" resultType="com.ejavashop.entity.member.Member">
    	select 
    	* 
    	from member 
    	where date(last_login_time) = #{lastLoginTime} 
    	and id in (select member_id from orders where order_state in(3,4,5))
    </select>
	
</mapper>