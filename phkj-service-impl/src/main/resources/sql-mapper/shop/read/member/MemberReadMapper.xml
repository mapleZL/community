<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.phkj.dao.shop.read.member.MemberReadDao">
	<resultMap id="MemberResult" type="com.phkj.entity.member.Member">
			<result property="id" column="id" />
			<result property="name" column="name" />
			<result property="password" column="password" />
			<result property="grade" column="grade" />
			<result property="gradeValue" column="grade_value" />
			<result property="integral" column="integral" />
			<result property="registerTime" column="register_time" />
			<result property="lastLoginTime" column="last_login_time" />
			<result property="lastLoginIp" column="last_login_ip" />
			<result property="loginNumber" column="login_number" />
			<result property="lastAddressId" column="last_address_id" />
			<result property="lastPaymentCode" column="last_payment_code" />
			<result property="gender" column="gender" />
			<result property="birthday" column="birthday" />
			<result property="email" column="email" />
			<result property="qq" column="qq" />
			<result property="mobile" column="mobile" />
			<result property="phone" column="phone" />
			<result property="pwdErrCount" column="pwd_err_count" />
			<result property="source" column="source" />
			<result property="balance" column="balance" />
			<result property="balancePwd" column="balance_pwd" />
			<result property="isEmailVerify" column="is_email_verify" />
			<result property="isSmsVerify" column="is_sms_verify" />
			<result property="smsVerifyCode" column="sms_verify_code" />
			<result property="emailVerifyCode" column="email_verify_code" />
			<result property="canReceiveSms" column="can_receive_sms" />
			<result property="canReceiveEmail" column="can_receive_email" />
			<result property="status" column="status" />
			<result property="updateTime" column="update_time" />
			<result property="memberType" column="member_type" />
			<result property="saleCode" column="sale_code" />
			<result property="inviterId" column="inviter_id" />
			<result property="quhaoNum" column="quhao_num" />
			<result property="teleNum" column="tele_num" />
			<result property="fenjiNum" column="fenji_num" />
			<result property="wechatNum" column="wechat_num" />
			<result property="certificateNum" column="certificate_num" />
			<result property="userCertify" column="usercertify" />
			<result property="wdName" column="wd_name" />
			<result property="wdwebAddress" column="wd_webaddress" />
			<result property="realName" column="real_name" />
			<result property="userAddress" column="user_address" />
			<result property="userAddinfo" column="user_addinfo" />
			<result property="dpAddress" column="dp_address" />
			<result property="dpAddinfo" column="dp_addinfo" />
			<result property="isSyncOms" column="is_sync_oms" />
			<result property="isTransferBussiness" column="is_transfer_bussiness" />
			<result property="headIcon" column="head_icon" />
	</resultMap>
	
	<sql id="getCondition">
        <where>
            <if test="queryMap.q_name != null and queryMap.q_name !=''">
                and name = #{queryMap.q_name}
            </if>
            <if test="queryMap.q_password != null and queryMap.q_password !=''">
                and password = #{queryMap.q_password}
            </if>
            <if test="queryMap.q_grade != null and queryMap.q_grade !=''">
                and grade = #{queryMap.q_grade}
            </if>
            <if test="queryMap.q_email != null and queryMap.q_email !=''">
                and email like CONCAT('%', #{queryMap.q_email}, '%')
            </if>
            <if test="queryMap.q_mobile != null and queryMap.q_mobile !=''">
                and mobile = #{queryMap.q_mobile}
            </if>
            <if test="queryMap.q_source != null and queryMap.q_source !=''">
                and source = #{queryMap.q_source}
            </if>
            <if test="queryMap.q_status != null and queryMap.q_status !=''">
                and status = #{queryMap.q_status}
            </if>
             <if test="queryMap.q_balancePwd != null and queryMap.q_balancePwd !=''">
                and balance_pwd = #{queryMap.q_balancePwd}
            </if>
        </where>
    </sql>
    
	<select id="get" parameterType="Integer" resultMap="MemberResult">
		select
		   *
		from `member`
		where `id` = #{id}
	</select>
	
	<select id="getMembersCount" parameterType="java.util.Map" resultType="Integer">
		select
		   count(*)
		from `member`
		<include refid="getCondition"/>
	</select>
	
	<select id="getMembers" parameterType="java.util.Map" resultMap="MemberResult">
		select
		   *
		from `member`
		<include refid="getCondition"/>
		order by `id` desc
		<if test="size != null and size &gt; 0">limit #{start},#{size}</if>
	</select>
	<select id= "getParterTuijianByMemberId"  resultMap="MemberResult" parameterType="Integer">
			select * from member m where m.id in (select ps.member_id from parter_sign ps ) and m.inviter_id = #{memberId}
	</select>
	
	<select id= "getParterTuijianByMemberId1"  resultMap="MemberResult" parameterType="Integer">
			select * from member m where m.id in (select ps.member_id from parter_sign ps ) 
			<if test="memberId != null and memberId !=''">
				and m.inviter_id = #{memberId}
			</if>
			<if test="memberTuijianId != null and memberTuijianId !=''">
				and m.id = #{memberTuijianId}
			</if>
	</select>
	
	<select id="getByNameAndPwd" parameterType="String" resultMap="MemberResult">
		select
		   *
		from `member`
		where `name` = #{name}
		and `password` = #{password}
	</select>

	<select id="getByPhoneAndPwd" parameterType="String" resultMap="MemberResult">
		select
		   *
		from `member`
		where `phone` = #{phone}
		and `password` = #{password}
	</select>

	<select id="getByName" parameterType="String" resultMap="MemberResult">
		select
		   *
		from `member`
		where `name` = #{name}
	</select>

	<select id="getByMemberId" parameterType="Integer" resultMap="MemberResult">
		select
		   *
		from `member`
		where `member_id` = #{memberId}
	</select>

	<select id="getByPhone" parameterType="String" resultMap="MemberResult">
		select
		   *
		from `member`
		where `phone` = #{phone} limit 1
	</select>

	<select id="getMemberBySellerId" parameterType="Integer" resultMap="MemberResult">
		select * from member where id = (select member_id from seller where id = #{sellerId})
	</select>
</mapper>